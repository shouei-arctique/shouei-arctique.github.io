<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>帽子戏法</title>
      <link href="/2024/07/03/new2/"/>
      <url>/2024/07/03/new2/</url>
      
        <content type="html"><![CDATA[<h1 id="帽子戏法"><a href="#帽子戏法" class="headerlink" title="帽子戏法"></a>帽子戏法</h1><p>作者：北冰洋</p><p><em>本文收录于2023年浙江大学推理社刊《求是集录：案之卷》</em></p><p><img src="/img/pt1.png" alt="test"><br><img src="/img/pt2.png" alt="test"></p><h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><p>“快看，前面那个不就是吗？跟明里发的照片一样。”萧彩萌指着手机屏幕。照片中，一栋庄严的别墅屹立在阴冷的森林中。更巧的是，车窗外的天气也同照片中那般死气沉沉，厚厚的云层将森林别墅罩<br>得密不透风，几声凄冷的乌鸦啼鸣如同兽爪般抓挠着天空，积雪铺满道路，仿佛一脚踩不到底。</p><p>“重生庄，这名字听起来还挺有希望的，结果居然是这么恐怖的地方。”毕一宇坐在驾驶位上，身体微微前倾，凝视着车外的别墅。</p><p>看来这就是本次的目的地了，虽然与想象中的有些差异。<br>毕一宇将车停在大门外的空地，刚熄火就连忙下车绕到副驾驶的车门前，为萧彩萌打开车门。萧彩萌双脚踏在松软的雪地上，鞋跟深深地扎进雪堆。</p><p>“服务真周到。”</p><p>“彩萌小姐，这是我的荣幸。”毕一宇装作绅士鞠了一躬。</p><p>“我看看，他们应该都到了吧，明里他们早上就出发了。”</p><p>“我们也是早上出发的呀，只可惜校区离这里实在是太远了，根本不在一个市。”毕一宇语气中带着抱怨，显然是被漫长的车程与曲折的山路折磨得筋疲力尽。“你看，现在都是下午了，过一会就要吃晚饭<br>了吧。”</p><p>“所以，还是当地人好啊，也难怪明里会把重生庄建在这里，作为社团活动的地方。”</p><p>重生庄距离明里他们学校非常近，大约十分钟的车程，只不过沿途没有公交，只能自己开车，或者学校的专车送他们过来。眼前的停车处只有毕一宇的车，看来他们是坐专车一起来的。</p><p>“好冷，要不咱们先进屋？”萧彩萌指着那扇褐色的大门。</p><p>“当然，要是彩萌小姐感冒了我可不好交代。”话音未落毕一宇就踏出双脚，走在崭新的白雪上。</p><p>“喂，别走那么快啊。”</p><p>重生庄整体色调偏暗，房顶是纯黑的，墙壁也大多刷成褐色，二楼的玻璃被擦得雪亮。大门前立着两根石英柱，相隔大约四米，上面刻着看不懂的洋文，门前的台阶上的积雪已经被清理干净了，门口摆放<br>着一辆轮椅。</p><p>两人走上楼梯，来到门前。</p><p>门是金属制的，散发着寒气。咚咚……毕一宇敲了敲门，食指和中指的骨关节像是被针扎般疼痛。</p><p>不一会便传来开门声。一张明朗的笑脸出现在眼前。</p><p>“啊啊，欢迎欢迎，你们来的也太慢了吧。”明里笑着欢迎两人，身上穿着纯白色的卫衣。</p><p>“久等了。”萧彩萌的语气并无歉意，更像是总裁赴宴时例行公事的问候。</p><p>“拖鞋在鞋柜最底层，我已经准备好了。”</p><p>“真是麻烦你了。”</p><p>鞋柜底下有两双毛绒拖鞋，萧彩萌选择了粉色的那双。</p><p>一进门便是客厅，沙发前的火炉已经点燃了，炽热的火焰将屋内空气烤得十分暖和。餐桌那边的吊灯已经亮了，两人循着灯光走过去。餐厅已经坐着其他成员了。</p><p>“哟，这不是萧彩萌小姐吗？今年也来我们的社团活动啦。”一个裹着黑皮衣红发青年朝他们挥着手，胸前挂着银色的十字架，大概就掌心大小。</p><p>“你是陆子雯吧，头发怎么染成红色了，我记得去年是……”</p><p>“别别别，去年是银色，小姐你总是说那是灰色，纠正你好几次了。”陆子雯摸了摸自己的红发。</p><p>“哈哈，没啥区别吧。”</p><p>“当然是有的啦，算了，已经解释了一年了，现在这红色总算够标志了吧。”</p><p>“那是，红色有什么寓意吗？”</p><p>陆子雯亲吻了自己的十字架，“红色这是我对主的绝对忠诚。”</p><p>不说还以为是玩摇滚的呢。</p><p>“话说，萧彩萌，你身边的男性的谁？巴布亚不来了吗？”坐在靠近楼梯的男生问道，他是副社长雨桐，胸前也挂着把大拇指大小的银色斧头。</p><p>“哦哦，这位是巴布亚在Z大推协的学弟，今天他代替巴布亚来保护我。”</p><p>毕一宇严肃地做了一番自我介绍。</p><p>“真好啊，大小姐的生活总是有保障，不像我们，只能祈祷，真好啊。”雨桐紧紧握住胸前的斧头。</p><p>明里端着茶盘缓缓走来，“大家，先喝点东西吧。”明里把盘中的咖啡摆到餐桌上，咖啡表面冒着滚烫的热气，像是沸腾般。</p><p>“彩萌小姐，小心烫。”毕一宇端了一杯咖啡给萧彩萌。</p><p>“萧彩萌小姐的衣服和雪如此般配，但是可别被黑咖啡玷污了。”一个男生左手拿着书，右手端着咖啡，说话时视线依旧停留在书页上。</p><p>“多谢安先生的提醒。”萧彩萌小心翼翼地抿了一口咖啡。</p><p>那个沉迷于书的男生姓安，平时说话文绉绉的，大家都喊他安先生，他也不反感。</p><p>“那么，所有人都到齐了。”明里郑重宣布。桌上的黑咖啡映着头顶光亮的吊灯。</p><p>“诶，”萧彩萌对明里的话感到疑惑，“那个，莱斯特今年没来吗？”</p><p>“来了呀，只不过好像去外面看雪了。真是的，那家伙明明腿受伤了还按捺不住好奇心。”</p><p>萧彩萌望着门口的轮椅。</p><p>“是的，那个轮椅就是莱斯特的，他说他上周骑摩托时撞到右腿了，现在行动得依靠拐杖和轮椅。”雨桐仿佛会读心术般回答道。<br>窗外，雪丝毫没有喘息的意图。</p><h2 id="02"><a href="#02" class="headerlink" title="02"></a>02</h2><p>明里，陆子雯，雨桐，安先生和莱斯特都是H大的大三学生，并且课外时间都加入了祈祷社。</p><p>祈祷社曾是H大的门面社团，每个渴望理想生活的人都会加入祈祷社，向自己心中的主祈祷，以求得健康、财运、学业上的发展。每年，祈祷社都会组织社员前往重生馆祈祷。重生馆里配有两层的祈祷<br>室，一楼祈求灾祸的远离，二楼祈求幸运的降临。由于主不接受沾染世俗的信徒，所以必须在一楼除去世俗之恶后才能去二楼对主祈祷。也就是说祈祷室的祈祷活动必须从一楼开始进行，通过祈祷室的楼<br>梯上二楼，这是祈祷社的宗旨，违背者将遭天谴。</p><p>至今，祈祷社已经有长达二十年的历史，当前的社长是明里，副社长是雨桐。社团内从不规定社员的主，就算社员们将偶像或者二次元视为主也无妨，祈祷社强调的是信仰，看重的是虔诚，而不是具体的<br>人或物。</p><p>也因为这样，社员们常常为自己的主的神圣而针锋相对，社团内的矛盾不断激化，到今年为止，祈祷社也就仅剩这几个人了。今年的祈祷活动过后，祈祷社也将解散。</p><p>萧彩萌作为Z大的学生，却连续几年参加了H大祈祷社的活动，说是为自己的论文寻找灵感，渐渐地和社团内的人混熟了。萧彩萌自认为祈祷说不上有用，但也无害。</p><p>今年最后一届社团活动，面对明里的邀请，萧彩萌当然选择参加。</p><p>“巴布亚，这是祈祷社最后一次活动了，你真的不去吗？”萧彩萌对巴布亚的婉拒感到遗憾。</p><p>“没办法呀，和推协的事冲突了，抽不出时间了。”巴布亚坐在教室的座位上，双眼死盯着电脑屏幕。</p><p>“那今年我一个人去吗？”</p><p>“没事，可以让毕一宇陪你，他应该很乐意。”</p><p>“他人到是很顺从。”</p><p>“怎么，怕他保护不好你吗？”</p><p>“……他还是先保护好自己吧。”</p><p>萧彩萌看着明里发来的照片，那栋熟悉又陌生的别墅，用不了多久就会变成废墟吧。又或者，或被其他社团当做社活的场所吗？有的话也一定是什么试胆社吧。</p><p>教室外的雪不知什么时候停了，教学楼下有学生走动，留下一串串交错的脚印。</p><h2 id="03"><a href="#03" class="headerlink" title="03"></a>03</h2><p>“真不好意思，本想在外面走一会的，谁知道路这么难走。”</p><p>重生庄的门口传来粗犷的男声，只见一个男人拄着右拐走了进来。</p><p>“莱斯特，进来记得关门……算了我来吧。”陆子雯站起身，朝莱斯特走去。</p><p>“哦，谢谢你，还有我的轮椅也帮忙推下过来吧。”</p><p>陆子雯从门外把轮椅搬了进来，轮椅看起来很重，但对于热爱健身的陆子雯来说问题不大。</p><p>关上门，屋内与屋外的极寒之地隔绝。“喏，坐着吧，”陆子雯把轮椅推到莱斯特的面前。</p><p>“上帝保佑你，你是个好人，陆子雯。”</p><p>“还是让上帝保佑你的右腿吧。”</p><p>餐桌那边传来一阵笑声，莱斯特操控着轮椅，向着餐厅移动。</p><p>“哦，亲爱的萧彩萌小姐，好久不见，雪白的衣服与白雪真般配！”莱斯特在献殷勤方面毫不吝啬。</p><p>“受伤也要来祈祷，真是辛苦你了。只是腿受伤的话就跳不起来了。”</p><p>“无伤大雅，最后一次参加社团活动了，就是头没了我也会来。”</p><p>大家对这个玩笑没有反应，空气像是窗外的雨雪一样结冰。</p><p>“那……我们差不多吃晚饭吧，晚上十二点要准时去祈祷室。”</p><p>萧彩萌看了看餐厅的时钟，差不多六点了。果然，冬天更容易饿呢。</p><p>“又能尝到明里做的饭菜，想想就不虚此行。”安先生盛赞道。</p><p>“最后在重生庄吃饭了，无论怎样都很难忘吧。”副社长雨桐感慨着。</p><p>不一会，明里就在餐桌上摆满了的菜。</p><p>“哇！”毕一宇是第一次品尝明里的菜，在视觉上已经先被折服了。</p><p>“很赞吧！”萧彩萌对毕一宇的反应表示习以为常。</p><p>“真的，感觉用筷子夹菜都是对菜的糟蹋。”</p><p>“话不能这么讲，”陆子雯撕下一只焦黄的烤鸭腿，“饭菜终究是吃的，不然跟模型没啥两样。”</p><p>“也是。”毕一宇拿起叉子，卷起一圈意大利面送进嘴里。伴着番茄酸的肉沫迅速在口里融化，还没来得及仔细咀嚼就迫不及待地咽下。</p><p>突然，古老的座钟发出了猛兽般的响声，游荡在重生庄中。这是六点钟的钟声。</p><p>“时间到了，开始吧。”</p><p>毕一宇一脸疑惑，“诶，开始啥？不是已经开始吃饭了吗？”</p><p>“笨蛋，”萧彩萌轻轻地拍了下毕一宇的肩膀，“晚上六点要做预备的祈祷啊，快放下叉子。”</p><p>毕一宇一头雾水地咽下嘴里剩余的食物，将叉子放回餐桌上。</p><p>“大家，双手十指紧扣，放于胸前。”明里命令道。</p><p>毕一宇用余光瞥着身边双目紧闭的萧彩萌，拙劣地模仿着祈祷的姿势。</p><p>“Uneasy lies the heads that wear hats……”</p><p>“诶，这是……”毕一宇在这一阵沉吟中不禁发出疑惑。</p><p>“笨蛋，那是咒语啦。”</p><p>作为第一次参与祈祷的新人，别说虔诚了，能完整进行仪式就是毕一宇此行最大的成功。</p><p>沉吟如同蜜蜂振翅般回响于餐厅，虽称不上震耳欲聋，但一词一句都那么铿锵有力。</p><p>沉吟结束，所有人都睁开双眼，双手恢复自由。“毕一宇先生是第一次参加吧，也是难为你了。”</p><p>毕一宇本想说一回生二回熟，但仔细一想已经没有下次了。</p><p>“那个，能问问这句话是什么意思吗？”</p><p>“那句英文啊，你可以理解为‘欲戴皇冠必承其重’。”安先生难得看着人讲话。</p><p>“这样啊，看来大家都肩负着某种责任呢。”毕一宇笑着摸了摸后脑勺。</p><p>“人生来就背着十字架，负重前行。每一次祈祷，都是让我们铭记肩上的责任，脚踏实地，方可仰望星空。”</p><p>毕一宇差点就为安先生的发言鼓掌了。</p><p>“大家，最后一次聚在重生馆，不要留下遗憾啊！一定要拿出平时百倍的虔诚，向我们的主展示信徒最忠诚的一面。”陆子雯举起桌上的酒杯。</p><p>毕一宇见状立马拿起酒杯，谁知杯中的酒没来得及刹车，溅到了明里的卫衣上。</p><p>“哇！”明里纯白色的卫衣上晕开一片紫红。</p><p>“啊抱歉抱歉！”毕一宇感觉抽了几张纸巾给明里。</p><p>但无论明里怎么擦拭，衣服上的大片污渍依旧很显眼</p><p>“算了，没事，反正晚上要换衣服。”明里宽容大量，符合社长的作风。只是身旁的萧彩萌向毕一宇投来了厌恶的眼神。</p><p>大家也都表达了自己的志愿，举起酒杯相敬。窗外的天空已被黑墨水涂满，幽静的森林里，重生馆是唯一的光源，从某种意义上来说，重生馆名副其实。<br>窗外的雪渐渐停了，一眼望去，地上的雪被屋内的灯光照得锃亮。</p><h2 id="04"><a href="#04" class="headerlink" title="04"></a>04</h2><p>酒足饭饱后，明里决定带大家参观一下重生馆。说是带大家，其实只是为了毕一宇这一个陌生人。</p><p>莱斯特以腿伤为由不跟随大家了。</p><p>“房间都安排好了吧，其他人都和去年一样，毕一宇先生的话，就住去年巴布亚住得房间吧，在二楼。”明里带着大家上了楼梯。</p><p>楼梯的顶上挂着一个中世纪的壁灯，灯光不亮，但氛围感十足。二楼的地板上铺满了雪似的白绒地毯，让人不忍心踩在上面。毕一宇小心地挪动脚步，跟着大家走。</p><p>从二楼栏杆望下去，可以看到一楼的客厅，火炉里的火依旧熊熊地烧着。</p><p>楼梯旁的第一间房间便是毕一宇的房间，毕一宇将自己的行李放了进去。要在这种氛围的别墅里住一晚，毕一宇竟有些激动。</p><p>“二楼的热水器在公用卫生间里，”明里指了指，“现在是关着的，想要洗澡的时候打开就可以了。”</p><p>所有人下了楼，接下来参观的是此行的重头戏——祈祷室。</p><p>明里打开一楼祈祷室的门。一进门，就是一排坐垫，坐垫前摆着一尊雕像，虽然灯光较暗看不清，但凭味道也能感受到生锈的迹象。黑暗中，看不见雕像的五官，甚至无法看清身体轮廓，只是视觉告诉自<br>己雕像的存在，仿佛意味着神是无形的。</p><p>“这是地狱之神。第一层是用于驱散厄运的祈祷室，跪在地狱之神前祈祷，地狱之神会杀死祈祷者身上的厄运之鬼。”</p><p>毕一宇看着那几张坐垫，十几年来无数社员都曾跪在这，单薄的坐垫竟要撑起十几年间信徒的祷告。</p><p>“上楼吧，楼上才是天堂。”祈祷室里面有单独的楼梯，连通一楼和二楼。</p><p>二楼的祈祷室意外的敞亮，不过也说不上意外，毕竟是天堂。墙壁上挂满了灯，周围再无其他杂物，只有房间中央的一个圆台。圆台有点高，正常人站着是摸不到顶的。</p><p>“这个圆台是用来做什么的？”毕一宇问道。</p><p>“其实这个圆台是礼帽的帽盖。”副社长雨桐纠正了毕一宇的问法。</p><p>“帽盖加上地板，便是一顶礼帽。还记得六点时念的咒语吗？”</p><p>“Uneasy lies the heads that wear hats……啊原来如此!”</p><p>“我们祈祷时会将自己的信物放到帽顶上，如你所见，帽顶很高，正常来说还要跳一下才能放上去。”陆子雯解释道，并跳着把自己胸前的十字架放了上去。一头红发像是在空中飞舞的火焰。</p><p>“看，就是这样。也是某种程度上的uneasy吧哈哈。”</p><p>“二楼没有雕像什么的吗？”</p><p>“都说了，祈祷社不限定社员的主，大家只需要向自己心中的主祈祷就行了。”萧彩萌对毕一宇的健忘症感到丢脸。</p><p>毕一宇发现二楼的祈祷室有一扇门。门十分破旧，像是很久都没人打开过。</p><p>“彩萌小姐，这扇门是？”毕一宇的手向风烛残年的门把手伸去。</p><p>“打开这扇门就是重生馆的二楼了，可以去二楼的各个房间……诶你别，不是那样扭的！”</p><p>萧彩萌的警告已经来不及了，在毕一宇的胡乱扭动下，把手被扭掉了。</p><p>“怎……怎么办？”</p><p>把手连同锁芯一起脱落，毕一宇手拿着门锁的残骸，茫然地看着已经无法使用的门。</p><p>“想想怎么它插回去，快，明里他们还没注意到，真是，第一次来就搞破坏。”</p><p>毕一宇狼狈地把把手塞回去，虽然无济于事。</p><p>“这扇门已经开不了，这可是祈祷室的门啊！”</p><p>“抱歉抱歉，事后我会赔偿明里小姐的。还请先别告诉他们。”</p><p>“哎，都是最后一次了。”</p><p>最后一次参加社团活动，应当拿出平时百倍的虔诚。</p><p>毕一宇和萧彩萌跟着明里他们下了一楼，客厅里温暖的火炉与柔软的沙发恭候着他们。</p><p>“现在是六点四十五，大家，十二点钟集合就行，自由活动吧。”明里像是老师一样宣布下课，便回二楼房间了，脚步声消失在走廊深处。</p><p>萧彩萌看着失了神的毕一宇，“喂，我们也房间吧，休息一下就准备祈祷了。”</p><p>“啊？彩萌小姐也要回我房间吗？”</p><p>萧彩萌啪的一声拍了下毕一宇的后脑勺。</p><p>“笨蛋！我是说，我们回各自的房间，我房间也在二楼。”</p><p>还没等毕一宇做出反应，萧彩萌便走上楼梯，不一会背影消失了。</p><p>“等等我！”毕一宇快步走上二楼。</p><h2 id="05"><a href="#05" class="headerlink" title="05"></a>05</h2><p>毕一宇躺在床上，思考着今天发生的事情。柔软的床仿佛将他吞噬。</p><p>“真倒霉啊，把明里小姐的衣服弄脏，还把祈祷室的门锁给搞坏了，哎……”</p><p>不过宽宏大量的明里一定会原他的吧，毕一宇幻想着。自从毕一宇见到为他们开门的明里时，毕一宇就被她的笑容所深深吸引，再加上品尝了明里的饭菜，一个完美妻子的形象在毕一宇的脑袋里勾勒出<br>来。</p><p>如果明里是我的妻子就好了，肯定很多男生这样想吧，至少社员们都是。</p><p>“虽然Z大和H大离得有些远，但每周来一次也不会很麻烦吧。”毕一宇脑子里已经开始制定追求明里的计划了。</p><p>“首先，明里是祈祷社的社长，那她一定很喜欢与神、宗教有关的事物。嗯，我也得了解下才行，不然以后都没共同话题了。”</p><p>“还有，萧彩萌说，明里是H大医学部的学生，医学方面的知识我应该没问题，平时我可是看了很多医疗剧的。”</p><p>“不知道明里喜不喜欢看推理小说呢？”毕一宇没忘记自己是Z大推协成员的身份。“如果没看过要怎么给他推荐呢？应该看过吧，女生或多或少都看过东野圭吾的作品吧。”</p><p>“不行，我得亮出我资深推理迷的身份才行，一上来就列举各种冷门名著，各种理论，这样她就会崇拜我了。”</p><p>毕一宇脑子里的计划一步步构建起来。</p><p>“还需要萧彩萌来搭桥牵线，让她以后多邀请我参加他们的聚会，增加我和明里的接触机会。”</p><p>毕一宇想着未来各种约会的场景。温暖的咖啡厅，入口即化的提拉米苏；街灯下两人手牵着手，影子变短又拉长，一步、两步、三步……</p><p>咚咚咚！</p><p>什么声音，是心跳吗？</p><p>咚咚咚！</p><p>微弱的心跳，是离得太远了吗？</p><p>“毕一宇先生，您在房间里吗？”</p><p>毕一宇猛的从床上坐起身来。一看时间，已经七点半了。自己迷迷糊糊地睡了一觉。</p><p>“门外有人在叫我吗？”</p><p>毕一宇摇摇晃晃地走去开门。</p><p>门一打开，一个男子静静地守在门口。</p><p>“你是？”</p><p>“毕一宇先生，您忘记我了吗？我是祈祷社的副社长雨桐。”</p><p>毕一宇这才擦亮眼睛。雨桐回房间后换了一套新衣服，也难怪毕一宇没认出来。</p><p>“哦哦，有什么事吗，副社长？”</p><p>“嗯，进你房间说吧，如果你方便的话。”</p><p>毕一宇没有拒绝的余地。</p><p>两人走到房间的桌前坐下，毕一宇想给雨桐倒杯水，结果意识到自己一会房间就睡了，根本没有去烧水。</p><p>“毕一宇先生，”雨桐率先发话，“听说你是Z大推协的成员是吗？”</p><p>“嗯是的。”是萧彩萌告诉他的吗？</p><p>“我本是祈祷社的副社长，但你知道的，祈祷社要解散了。”</p><p>“嗯。”毕一宇点点头。</p><p>“平时我也对推理小说感兴趣，所以，想在废社之后加入我们H大的推协。”</p><p>“好啊，不错的想法。”</p><p>“这次来就是想向您请教下推理方面的问题。”</p><p>“我的荣幸。”</p><p>接下来的一段时间两人一直在房间里探讨推理，直到那件事的发生。</p><h2 id="06"><a href="#06" class="headerlink" title="06"></a>06</h2><p>“那件事处理的怎么样了？”萧彩萌在和巴布亚通电话。</p><p>“本来就不是什么大事啦，刚刚已经到学校了。”</p><p>“跟你讲啊，毕一宇真是个笨手笨脚的家伙。”</p><p>“怎么说？”</p><p>“他呀，先是溅了明里一身酒，又把二楼祈祷室的门锁给搞坏了。”</p><p>“他肯定是紧张了，说不定，他喜欢明里呢。”</p><p>“真有可能！”</p><p>“好了好了，你不是九点就要去祈祷室了吗？还是休息一会儿吧。”</p><p>“是呀，亏你还记得。”</p><p>“那是，前几年不都是我陪你来的吗。”</p><p>“嗯，晚安啦。”</p><p>萧彩萌挂断了电话。</p><p>上次来这个房间还是一年前，房间依旧保持着原貌，可以想象得出祈祷社的成员对重生庄的保养十分用心。</p><p>萧彩萌调暗了床头的台灯，钻进温暖的被窝。窗外无言的白雪躺在地上，坚韧的树枝没被大雪压垮，远远望去，枝头像是涂满奶油般光滑。冬天的月光绝对可以用吝啬一词来形容，黑夜笼罩着重生庄。</p><p>事实上，静谧的美梦很快被敲门声打破了。</p><p>砰砰砰！</p><p>不知是谁在用力地敲门，不，用砸门更为贴切。</p><p>现在的时间是八点半。</p><p>从梦中惊醒的萧彩萌跑去开门。门外是一脸慌张的毕一宇，副社长雨桐也站在旁边。</p><p>“彩萌小姐，快！明里小姐她……”</p><p>“怎么回事？”</p><p>“明里小姐她不见了！”</p><p>“不见了？房间里没有吗？”</p><p>“准确来讲，不见的是明里社长的头。”雨桐显得格外冷静。</p><p>萧彩萌一行人连忙奔向明里的房间。房门已经打开，血腥味扑面而来。</p><p>“这是……”</p><p>床上躺着一具裸体的无头女尸，白色的床单已经被血染成红色，地毯上也是大片大片的血迹。有一道血迹穿过门，在走廊的雪白地毯上留下一条红线，更诡异的是，血迹拐弯朝二楼栏杆走去，随后消失不<br>见。萧彩萌往楼下一看，血迹继续蔓延，朝着一楼的祈祷室蔓延。像是什么东西带着血从二楼栏杆一跃而下，然后进入祈祷室。</p><p>直觉告诉他们，这就是明里的头移动的痕迹。</p><p>“祈祷室那里有人吗？”</p><p>“其他社员已经去祈祷室了。”</p><p>三个人下到一楼，继续沿着栏杆下的血迹，走进祈祷室。</p><p>盘旋的楼梯让人感觉二楼异常的高。几位社员正呆呆地站在圆台旁，注视被摆上帽顶的头颅——明里安详的面孔注视着前方。</p><p>“怎么会……”陆子雯双腿无力地跪下，红发失去了光泽。</p><p>“难道真的要拿人头献祭才是绝对虔诚的表现吗？”安先生双手插兜，一副对真相了然于心的样子。</p><p>毕一宇走上前，想要跃起把明里的头颅拿下来，却被身后的雨桐制止了。</p><p>“万万不可，”雨桐坚定的眼神看着毕一宇，“这是仪式，有人斩下了明里社长的首级，摆在帽顶之上，是想实现最后的祈祷。”</p><p>“非要砍人头不可吗？”毕一宇语气中带着愤怒。</p><p>“Uneasy lies the heads that wear hats，凶手固然可恨，但咒语就是这样。还请毕一宇先生先不要报警，不然我们的祈祷活动会被打扰。”</p><p>毕一宇无法接受明里因为这样的原因而被斩首的事实。</p><p>“毕一宇，你是怎么发现明里小姐被斩首？”萧彩萌想起是毕一宇把自己叫醒。</p><p>“是这样，七点半时雨桐来我房间找我讨论问题，我和他都挺好奇重生庄未来会怎么样，我很想提议用来作为解谜游戏的场所，于是我和雨桐就去找明里了。”</p><p>“我们在路上看到了从房间中蔓延出来的血迹，意识到不对劲，就冲过去打开房门，结果就发现了这样的惨状。”</p><p>其他社员也是被二楼的动静所惊起，见状后就跑向一楼的祈祷室。</p><p>一道血迹越过二楼栏杆来到一楼，走进祈祷室，爬上蜿蜒的楼梯，何人跃起，将首级置于帽顶。犯人曾跪在这祈祷吗？毕一宇低头俯视着地板。可笑的是，明里竟是被虔诚之心所杀。</p><p>突然，耳边再次传来沉吟。毕一宇抬起头，看到社员们双手合十，闭着眼，嘴里念着什么。就连萧彩萌也跟着祈祷，毕一宇只好学着做动作。</p><p>什么主、信仰的，不是很扯吗？所爱之人死得如此荒唐，众人却仿佛置身事外，袖手旁观。毕一宇双手紧扣，指甲嵌入肉里。</p><p>“用推理为明里报仇吧！”毕一宇在心里壮烈地宣誓。</p><p>窗外的雪又下了起来，仿佛要将亡灵埋葬。</p><h2 id="07"><a href="#07" class="headerlink" title="07"></a>07</h2><p>众人聚集在客厅里。火炉里的火摇曳着燃烧，发出响声。</p><p>“大家，方便的话，说说在明里小姐回房间后的行踪吧。”毕一宇肩负起侦探的责任。</p><p>坐在沙发上的安先生举起了手，“我先说吧。”</p><p>毕一宇从口袋里掏出随身携带的笔记本。</p><p>“六点四十五的时候，明里社长就回房间休息了。七点钟左右，客厅里的大家也都跟着回各自房间了。我在房间里睡了一会，就回餐厅去了。”</p><p>“回餐厅？你去那做什么？”</p><p>安先生举起自己手上的书。</p><p>“房间里的灯太暗了，我想在餐厅里吊灯下看会书。”</p><p>“你记得你看书的时间吗？”</p><p>“我到餐厅时是七点十五，之后我就一直在餐厅看书，八点半的时候听到二楼你们的喊叫。”</p><p>“好的，这期间你有看见过谁经过这吗？”</p><p>毕一宇明白，如果从二楼走楼梯把头运下来必须经过餐厅，这样的话就会被安先生看到。</p><p>“额，没有人，虽然视野范围只有餐厅前的过道，但我想我应该没有看漏。”</p><p>看来头真的是从二楼栏杆被扔下来，毕一宇知道这意味着什么。</p><p>“那么，下一个，莱斯特先生。”</p><p>莱斯特把轮椅转向毕一宇。</p><p>“你好，侦探先生，我能理解你对真相的热情，我对明里社长的死感到惋惜。”</p><p>“请问你在七点之后做了什么。”</p><p>“我的房间在一楼，你知道的，我爬楼梯要费很大力。我一直待在我的房间，七点十五的时候明里小姐来我的房间找过我。”</p><p>“什么？你是说七点十五明里小姐还活着是吗？”</p><p>“正是如此。”</p><p>“你们当时做了什么？”</p><p>“明里社长是想询问我之后的去向，祈祷社不是要解散了吗？社长很关心成员们的未来。”</p><p>“当时明里小姐有什么异常的吗？”</p><p>“异常？没什么异常，跟在餐桌上表现一样呀，衣服上还沾着你泼的酒渍呢，我想你不会忘记的。”</p><p>毕一宇本想警告他不要开玩笑，但仔细一想他也说的没错。</p><p>“嗯，我知道了，明里小姐走后你就一直呆在房间是吧。”</p><p>“正确，她大概带来三四分钟就走了。之后我就躺在床上休息，直到被你们的吵闹声吵醒。”</p><p>毕一宇挥舞着圆珠笔，在本子上记下。</p><p>“大侦探，您瞧瞧我这腿伤。”莱斯特指了指自己的右腿。“只能勉强走路。”</p><p>“这些问题我会最后统一询问。”毕一宇不想忽略任何一个嫌疑人。</p><p>陆子雯一副失了魂的样子，蜷缩在火炉前，像极了卖火柴的小女孩。</p><p>“陆子雯先生？”</p><p>毕一宇叫了他好几遍，他才慢慢把视线挪向毕一宇。</p><p>“好可怕，侦探，好可怕。”陆子雯颤抖吐出几个字，看来他被那场景吓得不轻。</p><p>“放轻松，你只要告诉我七点以后你在做什么就行了。”毕一宇安抚着嫌疑人，他身上的皮衣已经起皱了。</p><p>“我……我回到了我二楼的房间，然后……去了祈祷室。”</p><p>毕一宇瞪大眼睛，“你说你去了祈祷室？什么时候？为什么？”</p><p>“是七点半的时候，我……我发现我口袋里的一个东西不见了，心想是不是……在二楼祈祷室里跃起的时候……从口袋里飞出来了，于是……于是我就去二楼祈祷室寻找。”</p><p>“嗯，找到了吗？”</p><p>“找到了。”</p><p>“那你，”毕一宇有点犹豫，“那你那时候看到明里小姐的头颅了吗？”</p><p>“啊！！！”陆子雯尖叫了起来，他疯狂地抓着头，在地毯上打滚。</p><p>众人花了好长时间才让他冷静了下来，陆子雯眼珠充满了血丝。</p><p>“可以回答我的问题了吗？”</p><p>“没……没有看到，我找到东西就走了，没有看到明里社长的头……啊！”眼看陆子雯又要发疯了，众人赶紧把他按住。</p><p>“最后问一遍，你找到东西然后呢？”</p><p>“我……我在一楼和二楼的祈祷室里祈祷，一直到八点十五。”</p><p>“八点十五？”</p><p>“对……我看到祈祷室里的钟了。之后就回房间睡了一会……直到你们叫醒我。”</p><p>“好吧好吧，大家赶紧把他送回房间休息。”毕一宇命令道。</p><p>安先生放下手中的小说，和雨桐两人一前一后把陆子雯抬回房间。</p><p>“毕一宇，你有什么想法吗？”萧彩萌看着毕一宇一个人问了那么多话。</p><p>“还行吧，有点头绪，只是，我好渴啊！”毕一宇端起桌上的水一口闷了，唇焦口燥之时，水就像酒一样甘甜。</p><p>“这次你要好好表现哦，”萧彩萌站在毕一宇身旁，目光望着窗外，玻璃上映着两人的影子。</p><p>“为了明里。”</p><p>“嗯，我会找出凶手的。”毕一宇更像是对自己发誓道。</p><p>安先生和雨桐安置好陆子雯后回到了客厅。两人瘫软在沙发上，但毕一宇不想给他们喘息的机会。</p><p>“雨桐先生，虽然你七点半和八点半一直和我在一起，方便的话，可以告诉我你七点到七点半的行踪吗。”</p><p>“我直接回了房间，本来在床上睡了一两分钟，结果实在受不了身上的酒味，就去洗了个热水澡。”</p><p>“原来如此，在那之后你还见过明里小姐吗？”</p><p>“没，洗完澡后我就直接来找你了。”</p><p>这么说的话，最后一个见到明里的就是莱斯特吗？</p><p>“毕一宇先生应该能确保我在七点半到八点半的不在场证明吧？”</p><p>“话是这么说……”</p><p>毕一宇不知在纠结什么，他不停地在本子上写写画画，萧彩萌回想起自己在算圆锥曲线大题时的样子。</p><p>“顺便问下，彩萌小姐那段时间在做什么？”</p><p>萧彩萌怎么也想不到毕一宇竟会怀疑自己。</p><p>“我，我和巴布亚通了会电话就睡着了，最后被你的敲门声吵醒。”</p><p>“懂了，又是一个没有不在场证明的。”</p><p>萧彩萌一时分不清是不是玩笑话，总感觉，毕一宇好像认真起来了。</p><p>人头从二楼丢下，又被运上祈祷室的二楼，诡异的血迹，众人的证词，一股恐惧感笼罩着重生庄。除了陆子雯在房间休息其余人都在客厅，明明火炉还在燃烧，室内的空气却变得异常寒冷。安先生端着<br>书，也不知道是否是在假装冷静。</p><h2 id="08"><a href="#08" class="headerlink" title="08"></a>08</h2><p>毕一宇在客厅里到处徘徊，众人不敢出声，似乎在等他给出答案。已经是十一点半，离祈祷的时间只剩半个小时。雪已经堆满窗沿。</p><p>“不耽误大家时间了，我来说说我的推理吧，你们谁去把陆子雯叫起来？”</p><p>雨桐作为副社长承担起这个义务，他扛着半睡半醒的陆子雯做到沙发上。</p><p>毕一宇像是老师一样站在大家面前，沙发上的学生们屏息敛声。</p><p>“我希望我在推理的时候大家不要打断我，我做的只是从各位的证词中推理出真相，其他的我暂时不考虑。”</p><p>“首先，大家都承认自己的证词百分百准确没问题吧。”</p><p>社员们点了点头。</p><p>“如果真是这样的话，这不是很奇怪吗？明明大家的证词存在很大的漏洞。”</p><p>众人面面相觑。</p><p>“我们先从现场的情况来看，大家还记得那道血迹吧，凶手一定是砍下明里小姐的头后，将其从栏杆处扔到一楼。”</p><p>“但如果直接扔下的话，一定会引起很大的声响，很有可能引起别人的注意。而且，凶手就算将头从二楼扔下，自己也还是要走楼梯下一楼，这和自己拿着头走楼梯下一楼有什么区别呢？明明都存在下楼<br>梯被别人看到的风险。我们不难推测，凶手之所以会选择从二楼栏杆处扔下，而不是自己走楼梯下去前往一楼的祈祷室，正是因为他知道前者的风险比后者小。其实，我想说的是，凶手把明里小姐的头从<br>二楼扔下后，一楼的对应位置有人会帮他接住，之后再按照规定从一楼的祈祷室上到二楼的祈祷室。”</p><p>“也就是说，凶手有两个人。”</p><p>“接下来我将列出所有的凶手可能。”</p><p>“首先，我们要做的是证明社员四人中存在凶手。我们不妨把嫌疑人分为两组：安先生和陆子雯一组，记为第一组；莱斯特和雨桐一组，记为第二组。”</p><p>“在第一组中，我们需要证明存在凶手。我们由安先生的证词得出，七点十五到八点半无人经过餐厅前，即无人从二楼下来前往一楼的祈祷室。我们再看陆子雯的证词，住在二楼的他于七点半到八点十五<br>前往二楼的祈祷室寻找遗失的物品并呆在那里祈祷。但是，二楼祈祷室的门锁被我不小心拧坏了，二楼的门根本就不能从外面打开，所以说，如果陆子雯的证词成立，那么他必须从二楼下到一楼的祈祷室，再通过祈祷室里面的楼梯上二楼。安先生确定七点十五到八点半这段时间内无人经过他的面前，而陆子雯声称的七点半到八点十五这段时间又包含在其中，安先生没有看到陆子雯，而陆子雯又确定从<br>二楼下来穿过安先生的视线范围，即二者证词矛盾。”</p><p>“假设安先生是凶手，即陆子雯证词为真，安先生说谎，他那段时间在行凶，自然不知道陆子雯的行迹，那么我们的目的达成，成功在两人中找出凶手安先生；假设陆子雯是凶手，即安先生的证词为真，<br>陆子雯说谎，那么他那段时间可能正在二楼斩首，根本没有下到一楼，所以他也不知道安先生在餐厅看书，我们的目的达成，在两人中锁定凶手陆子雯。”</p><p>“综上，安先生和陆子雯中有一人是凶手，且两人不可能同时是凶手，不然二人组的证词不会有矛盾。”</p><p>沙发上的两人露出紧张的表情。</p><p>毕一宇继续他的演讲：“同理，在第二组中，我们同样能锁定凶手。”</p><p>“根据雨桐的证词，他七点钟直接回房间洗澡了，于是我们推理出他并没有去公共卫生间开煤气，但事实上他洗的是热水澡，那么一定是有人提前开了煤气洗澡。住在二楼的我、萧彩萌、陆子雯都没有洗<br>澡，那么只能是明里开了煤气洗澡。再看莱斯特的证词，他声称自己在七点十五时见到身穿沾着酒渍的白色卫衣的明里。这就很奇怪了，按照雨桐的说法，明里在他洗澡前已经打开煤气洗澡了，洗完澡后<br>怎么还会穿着脏衣服去找莱斯特呢？证词出现矛盾。”</p><p>“我们在不考虑安先生和陆子雯的证词真假的情况下讨论。假设一，莱斯特是凶手，他的证词是假的，而雨桐的证词是真的，那么事实上莱斯特并没有和明里见面，他找了个死无对证的人做不在场证明，但住在一楼的他不知道二楼的煤气已被明里打开；假设二，雨桐是凶手，莱斯特的证词为真，七点到七点半那段时间雨桐并没有洗澡，正在参与杀人，并不知道这期间莱斯特与明里曾见过面。”</p><p>“综上，雨桐和莱斯特中必定有一个人是凶手，且根据证词矛盾，两人不可能同时为凶手。”</p><p>萧彩萌像是双腿被冻在地毯上一般，没想到毕一宇在这么短时间内已经推理到这种地步。</p><p>“别急，接下来才是重点。”毕一宇端起茶几上的茶杯又是一口闷。</p><h2 id="09"><a href="#09" class="headerlink" title="09"></a>09</h2><p>“安先生和陆子雯中有且仅有一人是凶手，莱斯特和雨桐中有且仅有一人是凶手，再加上我之前凶手有两人的推论，我们不难得出以下的凶手组合：安先生和莱斯特、陆子雯和莱斯特、安先生和雨桐、陆子雯和雨桐。”</p><p>“如果按照排列组合，理论上四个人中可以找出的组合总共有六种，剩下的两种情况为安先生和陆子雯以及雨桐和莱斯特。但这两种组合都因内部证词矛盾而排除。”</p><p>“注意一个推理前提，我们在假设两人为凶手时，剩下两人的证词就是真证词，可以用来当做推理的材料。”</p><p>“首先，我们讨论安先生和莱斯特以及陆子雯和莱斯特的情况。既然参与杀人的有两人，职务分别为斩首和运首，我们自然要去推测凶手两人在此次案件中分别充当什么角色。对于莱斯特先生，我们注意<br>到他的假证词——七点十五见过明里穿着脏衣服，而在莱斯特是凶手的情况下，雨桐的证词即为真，明里小姐已经打开煤气洗澡，所以那个时间不可能穿着脏衣服。而莱斯特如果是参与斩首，他不仅要将<br>明里小姐的头斩下，还要将她的衣服脱光——别忘了我们进去时看到的是无头裸体女尸，也就是说，莱斯特一定是知道那时候明里小姐已经换了干净的衣服，那他又何必撒他本就知道不成立的谎话呢？所<br>以在莱斯特是凶手的情况下，他不可能是参与斩首的那一方，他必定是参与运首。回顾案发现场，安先生和陆子雯之中的凶手将头从二楼丢下，莱斯特在一楼接住，接着进入一楼的祈祷室，通过里面的楼<br>梯爬上二楼，最后成功将头颅置于帽顶之上。但不要忘记，帽顶很高，若要将首级放上去必须跳起，而对于右腿受伤的莱斯特来说，如果走路爬楼梯勉强可以的话，双脚离地跳起这种事是绝对做不到的。<br>另一方面，莱斯特走楼梯上二楼并趁着明里小姐睡觉的时候将其斩首的可能性更大，也就是说，莱斯特参与杀人，由于他的身体缺陷，他应该是参与斩首的一方，但这又与他的证词矛盾——本应知道事实<br>却说出不符事实的证词。”</p><p>“综上，在安先生和莱斯特、陆子雯和莱斯特的组合中，莱斯特既不能参与斩首，又不能参与运首，但凶手必须是两人，所以，含有莱斯特的凶手组合全部排除。”</p><p>毕一宇在空中比划了两个大叉。莱斯特如释重负地靠在椅背上，长舒一口气。</p><p>“接着，我们再来讨论安先生和雨桐的凶手组合。此时陆子雯和莱斯特的证词就是真证词，可以用来当做推理材料。根据陆子雯所陈述的事实，他七点半到八点十五在祈祷室里，所以这期间不可能发生杀<br>人事件，否则前来运首的人一定会与陆子雯相遇，那么凶手两人的作案时间一定是在八点十五到八点半之间。但事实上，作为凶手的雨桐从七点半到八点半就和我在一起，我能证明他此时间段的不在场证<br>明，所以这段时间他不可能参与斩首或运首。对了，你们可能想问，陆子雯是七点半到八点十五在祈祷室，难道七点到七点半这段时间不能行凶吗？从时间上来说确实可行，但别忘了，陆子雯在祈祷室并<br>没有看到人头，即斩首和运首尚未开始，所以在陆子雯去祈祷室之前不可能行凶。”</p><p>“综上，在安先生和雨桐为凶手的情况下，雨桐不可能行凶，所以这一组并不是真正的凶手组合。”</p><p>毕一宇又在空中划了个大叉。此时的沙发上，除了莱斯特，所有人都仿佛忘记了呼吸。火炉里的火摇曳着。</p><p>“最后，只剩下陆子雯和雨桐的凶手组合，真相浮出水面。”</p><p>萧彩萌没想到真相来得这么快，刚想夸赞毕一宇时，谁知毕一宇又泼了自己冷水。</p><p>“诸君，排除法的推理虽然巧妙，但在享受真相的果实之前，不妨先鉴别一下口味，按照我之前的推理模板。”</p><p>“讨论陆子雯和雨桐的凶手组合，在此情况下，安先生的证词是真的，即七点十五到八点半我们发现尸体时没有人经过餐厅前，也就是说没有人从二楼下到一楼进入祈祷室，但事实上，雨桐和陆子雯都是<br>住在二楼，两人中必有一个人要下楼在指定位置接住二楼扔下的首级，并运送至祈祷室。由此得知，凶手的作案时间应该是安先生到达餐厅看书之前，也就是七点到七点十五分。这段时间内，明里小姐已<br>经被斩首杀害，但不要忘记，在雨桐是凶手的情况下，莱斯特的证词为真，也就是说，他在七点十五见过活着的明里小姐，并且交谈了两三分钟。由此得出，凶手二人并未在七点到七点十五杀害明里小<br>姐。”</p><p>“综上，陆子雯和雨桐的凶手组合不成立。”</p><p>毕一宇在空中打上最后一个叉。时钟的时针还有五分钟指向十二点。</p><p>“这不就没有凶手了吗？”萧彩萌被毕一宇的推理搞得晕头转向。</p><p>“按照以上推理，是这样没错。”</p><p>“当然，前提是凶手在以上人员当中。”</p><p>话音未落，所有人的目光都齐刷刷地看向毕一宇。</p><p>“你是说，凶手可能是我们之外的人？”</p><p>“我想是这样没错。”</p><p>“时间不多了，我尽快说明。既然凶手不在四位社员之中，那四位社员的证词怎么会出现矛盾呢？原因很简单，实际上证词本身就是不矛盾的，关键在于时间。”</p><p>“事实上，现在距离我们到达重生庄的时候，已经过了一天，也就是说，我们最后一次见到明里，其实是在昨天。”</p><p>“大家不要忘记，明里小姐是学医的，有能力接触到各种药物，她给我们下了特殊的安眠药，让我们以为只是睡了一会儿，实际上睡了二十四小时以上。”</p><p>“这样一来，结合大家的证词，真实的情况是这样的：安先生于第一天晚上七点钟回房休息，于第二天的晚上七点十五起床去餐厅看书；陆子雯与第一天晚上七点半到八点十五前往祈祷室，接着从第一天<br>晚上八点十五睡到第二天晚上的八点半；莱斯特先生于第一天晚上七点十五见到未洗澡更衣的明里小姐，此后便一直睡到第二天晚上八点半；雨桐一回到房间就睡着了，从第一天的晚上七点睡到第二天晚<br>上七点，此时明里小姐早已在见过莱斯特后洗澡更衣，所以雨桐一起床就有热水。”</p><p>毕一宇将自己做的时间轴展示给大家：<br><img src="/img/pt3.png" alt="text"></p><p>“就是这样，在明里小姐已经洗完澡后你们睡觉的那段时间内，凶手将明里小姐斩首，将头从二楼抛下，而后自己经过祈祷室的楼梯爬上二楼，将头放于圆台之上。那时候大家都在睡觉，所以自然听不见<br>人头落地的动静。根据以上时间表，凶手办案的时间应该是第一天晚上八点十五到第二天晚上七点。事成之后便逃之夭夭，大雪掩盖了他的足迹。”</p><p>窗外的雪飘荡在夜空中，在屋内的灯光照耀下翩翩起舞。</p><p>“那凶手是？”</p><p>“一切场外人员，总之，不是我们在座的各位。”<br>咚咚咚……</p><p>深沉的钟声如同老者的低语，每一声都重重地落在心中。已经是晚上十二点，按照规定，祈祷社的所有成员必须去祈祷室祈祷。</p><p>四名成员仿佛听到警报般立马站起来，朝着祈祷室迈着步伐。毕一宇和萧彩萌跟在他们后面。</p><p>推开一楼祈祷室的门，四个社员跪坐在垫子上，低着头，像是思考者雕像，嘴里不断念着听不懂的咒语。垫子还剩下一个，这显然是留给明里社长的，萧彩萌和毕一宇还是站在他们身后，低着头，双手合<br>十，认真地祈祷。</p><p>祈祷完后，雨桐带头起身，领着大家走向二楼，光明一点点吞噬黑暗。</p><p>帽顶上立着明里的头颅。陆子雯奋力一跃，将自己的十字架放到顶部，随后雨桐也将自己的斧头挂架摆上去。待社员们摆好信物后，六个人围着大圆台站成一圈，开始最后的祈祷。</p><p>Uneasy lies the heads that wear hats.</p><p>沉吟之声填满整个祈祷室，流入明里的耳中。</p><p>“明里小姐，我的推理你听得见吗？”</p><p>毕一宇在心中默念着。</p><h2 id="10"><a href="#10" class="headerlink" title="10"></a>10</h2><p>祈祷结束后，众人走出一楼祈祷室。时间已经来到凌晨一点，森林里没有邻居，只有重生庄亮着灯。</p><p>“毕一宇先生，谢谢你的推理，我们明天起床后就会离开重生庄，到时还请你把你的推理告诉警方。一定要将犯人绳之以法，一定。”雨桐坚定地握着毕一宇的手。</p><p>道别后，大家回到各自房间。只是萧彩萌却一直跟着毕一宇。</p><p>“彩萌小姐，你的房间不是在那边吗？”毕一宇指了指二楼深处的房间。</p><p>“毕一宇，你就别装了，其实，凶手并不是什么场外之人吧？”萧彩萌单刀直入。</p><p>“什么意思？”</p><p>“时间并没有多过一天哦，明里并没有给我们下什么安眠药。”</p><p>毕一宇冷笑了一声，冷风呼啸着击打窗玻璃。</p><p>“你是怎么发现的？”</p><p>“火啊，火炉里的火，我们来的那天确实是烧着的，但起床后回到客厅时火还在烧啊，如果多过了一天，火早就灭了。凶手该不会闲着没事杀完人还去加柴吧。”</p><p>毕一宇轻轻地鼓了鼓掌，“厉害，看来巴布亚没少教你。”</p><p>“喂，你也别装什么老师了，”萧彩萌推了下毕一宇的肩膀，“你打算怎么办，不找出凶手报仇了？还是说你根本就找不出？你自己的推理结果就是没有凶手。”</p><p>“是的，我在那四人中所作的推理确实没有凶手，但我依然认为凶手就是那四人其中的两人。”</p><p>“哦？那你推理出错了吗？”</p><p>“对，我其实已经知道那个错误点了，不过当时我想将错就错，先给出一个伪解答，让所有人都脱罪，这样才能顺利进行祈祷活动。”毕一宇看向窗外。</p><p>“这也算是帮明里小姐完成最后的心愿吧。”</p><p>“所以说，推理到底哪出错了？”萧彩萌丝毫不关心毕一宇的情话。</p><p>“首先，安先生和陆子雯、雨桐和莱斯特，这两组内部的证言是有矛盾的，这一点没有问题，将凶手分为那四种组合，这也没有问题，关键在于安先生和莱斯特、陆子雯和莱斯特那两组的否定。”</p><p>“我们通过推理确定了莱斯特是运首的，但却因为他的腿伤无法跳跃否定了这种情况。但事实上他真的腿伤了吗？”</p><p>“你是说，莱斯特是假装腿伤吗？”萧彩萌按捺住自己的惊讶，以免吸引其他人的注意。</p><p>“对，其实我从第一眼见到莱斯特时就知道他在假装腿伤。你别忘了，莱斯特声称伤的是右腿，但他却拄的是右拐，如果右腿伤的话应该是左拐才对。”</p><p>“原来如此，也就是说，他在说谎，莱斯特就是凶手，他能够参与运首工作。”</p><p>毕一宇做了个打响指的动作，故意没打出声来。</p><p>“这样的话，凶手的组合就是安先生和莱斯特或者陆子雯和莱斯特了，然后呢？”</p><p>“然后，去睡觉吧！”</p><p>“诶？”</p><p>“我是说，去睡觉，一觉醒来就知道了。”</p><p>萧彩萌心想，所有侦探不过是谜语人罢了。</p><p>“明天早上，去祈祷室二楼看一看就知道凶手组合了。”</p><p>“为什么？”</p><p>“因为Uneasy lies the heads that wear hats，heads是复数哦，如果要完成祈祷，凶手起码还要再杀一个人。”</p><p>“原来是这个意思。”</p><p>“首先，凶手组合中除了莱斯特的另外一人，也就是陆子雯和安先生中的凶手一人，我把他成为第二人。第二人知道莱斯特的腿伤，也知道我做出的推理漏洞，如果我把推理告诉警方的话，只要警方调查<br>一下，凶手就很容易露馅了。所以，如果凶手要免除自己的嫌疑，同时又要继续斩首，会怎么做呢？”</p><p>“他会……把另外两个不是凶手的人杀了？”萧彩萌颤颤巍巍地说出自己的答案。</p><p>毕一宇朝她摇了摇食指，“不不不，这样不就在告诉警方自己是凶手吗？凶手二人，无辜者二人，你说最后活下来的两个人，警方会怎么想？”</p><p>“那，要怎么做呢？”</p><p>“你想，凶手既要活下来，又要免除嫌疑，还要杀人，那么如果他能通过杀人将包括自己的存活者二人伪装成绝对不可能犯罪的组合，他的目的就达成了。”</p><p>“不行，我要被你绕晕了。”</p><p>“你要站在凶手的角度思考这个问题。假设你是第二人，你已经知道侦探关于莱斯特推理的错误，但反过来说，你也确定侦探关于雨桐推理的正确。如果最后剩下的是你和雨桐，那么警方如何调查你都不<br>会有嫌疑。”</p><p>“也就是说，第二人会杀了莱斯特以及陆子雯和安先生中剩下的无辜的人。这样的话，最后活着的两人就是第二人和雨桐，原本会和自己共享嫌疑的凶手莱斯特死了，而毕一宇关于第二人和雨桐的推理又<br>是无懈可击的，对吧？”</p><p>毕一宇又在空中做出打响指的动作。</p><p>“去睡觉吧，明天起床去二楼的祈祷室看看，如果摆着安先生和莱斯特的头颅的话，那么凶手组合就是陆子雯和莱斯特；如果是陆子雯和莱斯特的头颅的话，凶手组合就是安先生和莱斯特。等我们离开重<br>生庄后，我也会把我的推理告诉警方的。”</p><p>“我知道，那么明天早上见。”</p><p>萧彩萌一边挥手一边朝着自己房间走去。</p><p>“我一定会比你先知道结果的，晚安啦。”</p><p>萧彩萌关上房门。雪停了，为重生庄最后的夜晚而驻足。</p><p>11</p><p>晨风鼓起窗帘，清晨的阳光穿透玻璃，一缕缕洒在房间的地板上，像是光的地图。</p><p>萧彩萌迷迷糊糊地睁开双眼，已经是早上十点半了。</p><p>“完蛋，这么晚了！”萧彩萌赶紧换好衣服，连刷牙洗脸都顾不上，慌慌张张地跑下楼梯，直奔祈祷室。</p><p>“明明说要第一个知道真相的。”</p><p>推开祈祷室的门，空气中弥漫着新鲜的血腥味。萧彩萌知道，果然又有人被斩首了。</p><p>绕着螺旋的楼梯，一步步爬上二楼，萧彩萌的心情逐渐激动起来。</p><p>来到二楼，一片豁然开朗。萧彩萌目瞪口呆地站在圆台下，凝视着帽顶新出现的人头。</p><p>“没想到，你居然先来了。”</p><p>毕一宇的头颅面目狰狞地瞪着萧彩萌。</p>]]></content>
      
      
      <categories>
          
          <category> 推理のSonata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推理 </tag>
            
            <tag> 拙作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/02/xxx/"/>
      <url>/2024/07/02/xxx/</url>
      
        <content type="html"><![CDATA[<h2 id="1st"><a href="#1st" class="headerlink" title="1st"></a>1st</h2>]]></content>
      
      
      <categories>
          
          <category> 論文複現のSonata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斯坦福CS224W</title>
      <link href="/2024/07/02/CS224W/"/>
      <url>/2024/07/02/CS224W/</url>
      
        <content type="html"><![CDATA[<h2 id="1-图论基础"><a href="#1-图论基础" class="headerlink" title="1.图论基础"></a>1.图论基础</h2><p>见离散数学。</p><ol><li><p>Heterogeneous Graph (异质图)的例子：</p><ul><li>社交网络图：一个人可以与多个人建立联系，每个人可能有不同的属性（如年龄、性别、职业等）。</li><li>生物信息学中的基因调控网络：一个基因可以调控多个其他基因的表达。</li></ul></li><li><p>异质图和普通图的区别：</p><ul><li>普通图的边表示节点之间的连接关系，而异质图中的边可以表示不同类型的关系，如合作、竞争等。</li><li>普通图中的节点通常具有相同类型的属性，而异质图中的节点可以具有不同类型的属性。</li></ul></li><li><p>Bipartite Graph (二分图)的例子：</p><ul><li>学生与课程的关系图：一个学生可以选择多个课程，一个课程可以被多个学生选择。</li><li>城市与道路的关系图：一个城市可以有多个道路，一个道路连接两个城市。</li></ul></li><li><p>Directed Graph的例子：</p><ul><li>交通流量图：每条边表示一条路，边的权重表示车辆的流量。</li><li>电子邮件传递过程：每个节点表示一个人或组织，边表示邮件从一个节点传递到另一个节点的过程。</li></ul></li><li><p>设计本体图Ontology的方法：</p><ul><li>确定领域范围和概念：首先明确本体涉及的领域和概念，例如生物学、计算机科学等。</li><li>定义实体和关系：根据领域知识，定义实体（如人、物、事件等）和关系（如“属于”、“发生在”等）。</li><li>设计本体结构和语义约束：确定实体之间的关系类型（一对一、一对多等），并添加适当的语义约束以确保一致性和完整性。</li><li>使用本体编辑器或工具进行建模：可以使用专业的本体编辑器（如OWL、RDF等）或在线工具来创建和维护本体图。</li></ul></li><li><p>为什么要把图表示成矩阵？</p><ul><li>矩阵是一种高效的数据结构，适用于表示稀疏图（即边的数量远小于顶点的数量的平方）。在稀疏图中，大部分元素为零，因此使用矩阵可以节省存储空间和计算资源。</li></ul></li><li><p>从连通域的角度理解“六度空间”理论：</p><ul><li>“六度空间”理论指的是任何两个人之间最多只需要通过六个人就可以相互认识。这是因为在社交网络中，信息传播通常是通过朋友的朋友的朋友等间接途径进行的。当一个人想要认识另一个人时，他&#x2F;她可以通过直接的朋友、朋友的朋友、朋友的朋友的朋友等途径将信息传递给目标对象。因此，最多需要经过六个中间人即可实现相互认识。</li></ul></li><li><p>为什么很多真实场景的图都是稀疏的？</p><ul><li>许多真实场景中的图形往往是由少量节点和边组成的，这就是所谓的稀疏图。这主要有以下原因：<ul><li>低度连接性：在许多情况下，节点之间的连接性较低，只有少数几条边存在。例如，社交媒体上的好友关系通常只涉及到一小部分用户。</li><li>长路径限制：许多图形结构具有限制路径长度的要求，因为过长的路径可能导致信息传输效率低下或产生冗余信息。例如，生物信息学中的基因调控网络中，某些调控因子可能会抑制与其直接相连的其他调控因子的影响。</li></ul></li></ul></li></ol><h2 id="2-传统图机器学习方法"><a href="#2-传统图机器学习方法" class="headerlink" title="2.传统图机器学习方法"></a>2.传统图机器学习方法</h2><h3 id="a-前言"><a href="#a-前言" class="headerlink" title="a.前言"></a>a.前言</h3><p>传统的图机器学习即人工特征工程+机器学习。而后面的深度学习GNN可以端到端自动学习特征。</p><p>本章重点着眼于手工设计无向图三种数据层次上的结构特征，连接关系，做预测问题。</p><h3 id="b-节点-node-层面的特征工程"><a href="#b-节点-node-层面的特征工程" class="headerlink" title="b.节点(node)层面的特征工程"></a>b.节点(node)层面的特征工程</h3><h4 id="找到能够描述节点在网络中结构与位置的特征"><a href="#找到能够描述节点在网络中结构与位置的特征" class="headerlink" title="找到能够描述节点在网络中结构与位置的特征"></a>找到能够描述节点在网络中结构与位置的特征</h4><p>· 节点度数<br>· 节点重要度<br>· 聚集系数<br>· 定义的子图的数量</p><h4 id="度数"><a href="#度数" class="headerlink" title="度数"></a>度数</h4><p>缺点在于将节点的所有邻居视为同等重要的</p><h4 id="节点重要度"><a href="#节点重要度" class="headerlink" title="节点重要度"></a>节点重要度</h4><p>node centrality考虑了节点的重要性</p><ul><li><p>1eigenvector centrality：认为如果节点邻居重要，那么节点本身也重要因此节点 v的centrality是邻居centrality的加总。可用矩阵表示。</p></li><li><p>2betweenness centrality：认为如果一个节点处在很多节点对的最短路径上，那么这个节点是重要的。（衡量一个节点作为bridge或transit hub的能力。就对我而言直觉上感觉就像是新加坡的马六甲海峡啊，巴拿马运河啊，埃及的苏伊士运河啊，什么君士坦丁堡，上海，香港……之类的商业要冲的感觉）</p><p> 意思就是如果一个链接图上，任意两个节点之间的通路，经过每个点的次数，次数最大的点其重要性最大。</p></li><li><p>3closeness centrality：认为如果一个节点距其他节点之间距离最短，那么认为这个节点是重要的<br>$<br>c_{v}&#x3D;\frac{1}{∑某点到其他任意点的最短路}<br>$<br><img src="https://img-blog.csdnimg.cn/20210528104341763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BvbGFyaXNSaXNpbmdXYXI=,size_16,color_FFFFFF,t_70"></p></li><li><p>5clustering coefficient3：衡量节点邻居的连接程度<br>描述节点的局部结构信息</p></li></ul><h4 id="graphlets有根连通异构子图"><a href="#graphlets有根连通异构子图" class="headerlink" title="graphlets有根连通异构子图"></a>graphlets有根连通异构子图</h4><p>就跟同分异构体一样。</p><h4 id="总结——节点特征"><a href="#总结——节点特征" class="headerlink" title="总结——节点特征"></a>总结——节点特征</h4><ul><li>节点在图中的重要性：如度数，centrality</li><li>节点附近的拓扑属性<br>如度数，聚集系数，异构图</li></ul><h4 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h4><p>就我的理解，大致来说，传统节点特征只能识别出结构上的相似，不能识别出图上空间、距离上的相似</p><h3 id="c-边-link-的特征工程"><a href="#c-边-link-的特征工程" class="headerlink" title="c.边(link)的特征工程"></a>c.边(link)的特征工程</h3><h4 id="通过已知连接，补全未知连接"><a href="#通过已知连接，补全未知连接" class="headerlink" title="通过已知连接，补全未知连接"></a>通过已知连接，补全未知连接</h4><p><img src="https://img-blog.csdnimg.cn/20210528125510955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BvbGFyaXNSaXNpbmdXYXI=,size_16,color_FFFFFF,t_70"></p><h4 id="两种formulations"><a href="#两种formulations" class="headerlink" title="两种formulations"></a>两种formulations</h4><ul><li>1.静态客观图：蛋白质，分子</li><li>2.时间动态预测图：社交网络，论文引用</li></ul><h4 id="基于相似性进行链接预测：计算两点间的相似性得分（如用共同邻居衡量相似性），然后将点对进行排序，得分最高的n组点对就是预测结果，与真实值作比"><a href="#基于相似性进行链接预测：计算两点间的相似性得分（如用共同邻居衡量相似性），然后将点对进行排序，得分最高的n组点对就是预测结果，与真实值作比" class="headerlink" title="基于相似性进行链接预测：计算两点间的相似性得分（如用共同邻居衡量相似性），然后将点对进行排序，得分最高的n组点对就是预测结果，与真实值作比"></a>基于相似性进行链接预测：计算两点间的相似性得分（如用共同邻居衡量相似性），然后将点对进行排序，得分最高的n组点对就是预测结果，与真实值作比</h4><h4 id="distance-based-feature：两点间最短路径的长度"><a href="#distance-based-feature：两点间最短路径的长度" class="headerlink" title="distance-based feature：两点间最短路径的长度"></a>distance-based feature：两点间最短路径的长度</h4><p><img src="https://img-blog.csdnimg.cn/2021052813134058.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BvbGFyaXNSaXNpbmdXYXI=,size_16,color_FFFFFF,t_70"><br>这种方式的问题在于没有考虑两个点邻居的重合度the degree of neighborhood overlap，如B-H有2个共同邻居，B-E和A-B都只有1个共同邻居</p><h4 id="local-neighborhood-overlap：捕获两节点的共同邻居数"><a href="#local-neighborhood-overlap：捕获两节点的共同邻居数" class="headerlink" title="local neighborhood overlap：捕获两节点的共同邻居数"></a>local neighborhood overlap：捕获两节点的共同邻居数</h4><p><img src="https://img-blog.csdnimg.cn/20210528131513561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BvbGFyaXNSaXNpbmdXYXI=,size_16,color_FFFFFF,t_70"><br>cn为共同好友数目<br>jc为交并比<br>a-ai为共同好友是不是社牛(好友的好友多)<br>common neighbors的问题在于度数高的点对就会有更高的结果，Jaccard’s coefficient是其归一化后的结果。<br>Adamic-Adar index在实践中表现得好。在社交网络上表现好的原因：有一堆度数低的共同好友比有一堆名人共同好友的得分更高。</p><h4 id="全图邻居"><a href="#全图邻居" class="headerlink" title="全图邻居"></a>全图邻居</h4><p>local neighborhood overlap的限制在于，如果两个点没有共同邻居，值就为0。<br><img src="https://img-blog.csdnimg.cn/20210528131745312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BvbGFyaXNSaXNpbmdXYXI=,size_16,color_FFFFFF,t_70"><br>但是这两个点未来仍有可能被连接起来。所以我们使用考虑全图的global neighborhood overlap来解决这一问题。<br>Katz index：计算点对之间所有长度路径的条数<br>计算方式：邻接矩阵求幂。邻接矩阵的k次幂结果，每个元素就是对应点对之间长度为k的路径的条数（离散数学里学过）<br><img src="https://img-blog.csdnimg.cn/20210528132827488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BvbGFyaXNSaXNpbmdXYXI=,size_16,color_FFFFFF,t_70"><br>discount factor β 会给比较长的距离以比较小的权重。</p>]]></content>
      
      
      <categories>
          
          <category> 编程のEtude </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面向对象编程</title>
      <link href="/2024/07/01/oop/"/>
      <url>/2024/07/01/oop/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>参考视频(推荐1.5倍速食用)：<a href="https://www.bilibili.com/video/BV1A4411v7b2?p=31&vd_source=1a36db16e3fec3ccbe040303ff015aab">https://www.bilibili.com/video/BV1A4411v7b2?p=31&amp;vd_source=1a36db16e3fec3ccbe040303ff015aab</a><br>参考博客：<a href="https://blog.csdn.net/qq_41872653/article/details/109256914">https://blog.csdn.net/qq_41872653/article/details/109256914</a></p><h1 id="Chapter1、面向对象基本概念"><a href="#Chapter1、面向对象基本概念" class="headerlink" title="Chapter1、面向对象基本概念"></a>Chapter1、面向对象基本概念</h1><h2 id="1、什么是面向对象编程？"><a href="#1、什么是面向对象编程？" class="headerlink" title="1、什么是面向对象编程？"></a>1、什么是面向对象编程？</h2><p>面向对象编程（Object-Oriented Programming，OOP）是一种常用的编程思想，它强调<strong>万物皆对象</strong>，因此在编程时我们可以将现实世界中的事物抽象成程序中的对象，从而更好实现软件的设计与开发。与传统的基于函数的编程不同，面向对象编程注重于将数据与行为封装在一起，即对象既包含数据状态，还包含可调用的行为方法。</p><p>面向对象编程的特点在于，它具有<strong>封装、继承和多态</strong>三大特性。封装意味着将对象的状态和行为进行封装，使其对外只暴露必要的接口，从而提高了安全性和可维护性；继承指的是某个对象可以继承另一个对象的特性，从而快速构建具有相似属性的对象；多态是指同一种行为在不同的对象上具有不同的表现形式，即在不同的情境下，同一个方法可以被不同的对象进行调用。</p><p>总之，面向对象编程是一种强大的编程方式，它具有高度封装性、灵活的继承性和强大的多态性，通过使用对象作为程序的基本处理单元，实现了数据和行为的有机结合，可以使程序更加高效、结构清晰，并方便管理和扩展。</p><h2 id="2、对象和类的关系"><a href="#2、对象和类的关系" class="headerlink" title="2、对象和类的关系"></a>2、对象和类的关系</h2><p>对象可以抽象出某个具体的类，类可以实例化成某个具体的对象。</p><h1 id="Chapter2、类的基本语法"><a href="#Chapter2、类的基本语法" class="headerlink" title="Chapter2、类的基本语法"></a>Chapter2、类的基本语法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class Dog:</span><br><span class="line">    d_type = <span class="string">&quot;京巴&quot;</span> <span class="comment">#属性，类属性，类变量</span></span><br><span class="line">    def say_hi(self): <span class="comment">#方法，第一个参数必须是self  self代表实例本身</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;my type is&quot;</span>,self.d_type)</span><br><span class="line"></span><br><span class="line">d=Dog()<span class="comment">#生成一个实例</span></span><br><span class="line">d.say_hi()<span class="comment">#实例、方法</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(d.d_type)<span class="comment">#实例、属性</span></span><br></pre></td></tr></table></figure><h2 id="1、类的命名要求首字母大写。"><a href="#1、类的命名要求首字母大写。" class="headerlink" title="1、类的命名要求首字母大写。"></a>1、类的命名要求首字母大写。</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class Money:</span><br><span class="line">    <span class="built_in">print</span>(Money.__name__)<span class="comment">#打印Money类的类名</span></span><br><span class="line">    xxx=Money<span class="comment">#Money作为变量赋值给xxx</span></span><br><span class="line">    <span class="built_in">print</span>（xxx.__name__） <span class="comment">#打印结果还是Money类名</span></span><br></pre></td></tr></table></figure><h2 id="属性相关"><a href="#属性相关" class="headerlink" title="属性相关"></a>属性相关</h2><h3 id="2、属性相关概念"><a href="#2、属性相关概念" class="headerlink" title="2、属性相关概念"></a>2、属性相关概念</h3><p>变量是可以改变的量值；属性是“属于某个对象的特性”。变量根据访问位置的不同，分为全局变量和局部变量；属性只能通过对象来访问，所以必须先找到对象————而对象又通过变量名来访问，故也遵循访问权限。</p><h3 id="3、属性添加"><a href="#3、属性添加" class="headerlink" title="3、属性添加"></a>3、属性添加</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    pass</span><br><span class="line">p = Person()<span class="comment">#创建对象</span></span><br><span class="line">p.age = 18<span class="comment">#添加属性</span></span><br><span class="line"><span class="built_in">print</span>(p.__dic__ )</span><br></pre></td></tr></table></figure><h3 id="4、属性修改"><a href="#4、属性修改" class="headerlink" title="4、属性修改"></a>4、属性修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    pass</span><br><span class="line">p = Person()<span class="comment">#创建对象</span></span><br><span class="line">p.age = 18<span class="comment">#添加属性</span></span><br><span class="line">p.age = 123<span class="comment">#修改</span></span><br><span class="line"><span class="built_in">print</span>(p.__dict__ )</span><br></pre></td></tr></table></figure><p>当我们修改没有创建过的属性时：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(p.sex) </span><br><span class="line">报错AttributeError:</span><br></pre></td></tr></table></figure><h3 id="P13、属性删除"><a href="#P13、属性删除" class="headerlink" title="P13、属性删除"></a>P13、属性删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    pass</span><br><span class="line">p = Person()</span><br><span class="line">p.age = 18</span><br><span class="line">del p.age</span><br><span class="line"><span class="built_in">print</span>(p.age)<span class="comment">#AttributeError:</span></span><br><span class="line">先删除属性，再删除引用的变量。</span><br></pre></td></tr></table></figure><h3 id="P14、注意事项"><a href="#P14、注意事项" class="headerlink" title="P14、注意事项"></a>P14、注意事项</h3><p>不同对象的属性不能互相访问。</p><h3 id="P15、类属性-增加属性"><a href="#P15、类属性-增加属性" class="headerlink" title="P15、类属性-增加属性"></a>P15、类属性-增加属性</h3><p>万物皆对象，类也可以是一个对象。<br>注意，当我们创建一个类的时候，我们实际上也创建了一些类的内置属性（<strong>name</strong>,__module__等）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class Money:</span><br><span class="line">    pass</span><br><span class="line">Money.count = 1 <span class="comment">#Money看做对象，Money增加count属性</span></span><br><span class="line"><span class="built_in">print</span>(Money.count)</span><br></pre></td></tr></table></figure><h3 id="P17、类属性查询"><a href="#P17、类属性查询" class="headerlink" title="P17、类属性查询"></a>P17、类属性查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Money:</span><br><span class="line">    pass</span><br><span class="line">class Test:</span><br><span class="line">    pass</span><br><span class="line">one=Money()</span><br><span class="line">one.__class__=Test</span><br><span class="line">最后one只能访问到Test的类属性</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：一个对象，如果要去访问某个属性，它会优先查找自己有没有这个属性，有就返回；若没有，则在类中找。都没有就报错AttributeError：</p><h3 id="P18、类属性修改"><a href="#P18、类属性修改" class="headerlink" title="P18、类属性修改"></a>P18、类属性修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Money:</span><br><span class="line">age=28</span><br><span class="line">    count=1</span><br><span class="line">    num=666</span><br><span class="line">    </span><br><span class="line">Money.age=22 <span class="comment">#通过类名-属性修改</span></span><br><span class="line"><span class="built_in">print</span>(Money.age)</span><br></pre></td></tr></table></figure><p>注意：不可通过对象修改！<br>one是一个对象，<strong>one.age&#x3D;99是给one对象增加一个age指向99的属性</strong>，而不是修改类的属性。 </p><h3 id="P19、类属性删除"><a href="#P19、类属性删除" class="headerlink" title="P19、类属性删除"></a>P19、类属性删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del Money.age</span><br></pre></td></tr></table></figure><p>注意：不能通过对象来删除。</p><h4 id="总结类属性操作"><a href="#总结类属性操作" class="headerlink" title="总结类属性操作"></a><strong>总结类属性操作</strong></h4><p>增、删、改类属性都只能通过类。查询可通过对象和类操作。</p><h3 id="P20、类属性的内存存储"><a href="#P20、类属性的内存存储" class="headerlink" title="P20、类属性的内存存储"></a>P20、类属性的内存存储</h3><p>1）one访问某个属性，实际上访问的是生成的对象里面__dict__字典的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class Money:</span><br><span class="line">    pass</span><br><span class="line">one=Money()</span><br><span class="line">one.__dict__=&#123;<span class="string">&#x27;age&#x27;</span>:99&#125;</span><br><span class="line"><span class="built_in">print</span>(one.age)</span><br><span class="line">&gt;&gt;&gt;99</span><br></pre></td></tr></table></figure><p>2）<strong>类</strong>的__dict__属性不能被写，只读。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class Money:</span><br><span class="line">    age=20</span><br><span class="line"></span><br><span class="line">Money.__dict__=&#123;<span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;男&#x27;</span>&#125;</span><br><span class="line">&gt;&gt;&gt;报错</span><br></pre></td></tr></table></figure><p>反过来讲，对象的dict可以随便改www</p><h3 id="P21、类属性会被各个对象所共享"><a href="#P21、类属性会被各个对象所共享" class="headerlink" title="P21、类属性会被各个对象所共享"></a>P21、类属性会被各个对象所共享</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class Money:</span><br><span class="line">    age=20</span><br><span class="line"></span><br><span class="line">one=Money()</span><br><span class="line">two=Money()<span class="comment">##均指向类的age=20，因为自身没有age属性</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(one.age,two.age)</span><br><span class="line">&gt;&gt;&gt;都是20</span><br></pre></td></tr></table></figure><h3 id="P23、限制对象属性的添加-slots"><a href="#P23、限制对象属性的添加-slots" class="headerlink" title="P23、限制对象属性的添加__slots__"></a>P23、限制对象属性的添加__slots__</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    __slots__ = [<span class="string">&quot;age&quot;</span>]<span class="comment">#限制对象不能添加age属性</span></span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">p=Person()</span><br><span class="line">p.age=6</span><br><span class="line">&gt;&gt;&gt;报错</span><br></pre></td></tr></table></figure><h2 id="方法相关"><a href="#方法相关" class="headerlink" title="方法相关"></a>方法相关</h2><h3 id="P25、概念和作用"><a href="#P25、概念和作用" class="headerlink" title="P25、概念和作用"></a>P25、概念和作用</h3><p>1.描述一个目标的行为动作<br>2.和函数非常类似，都封装了一系列动作，都可以被调用之后执行一系列行为动作，最主要的时调用方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Person：</span><br><span class="line">def eat2(self):</span><br><span class="line">        <span class="built_in">print</span>(1)</span><br><span class="line">        <span class="built_in">print</span>(2)</span><br><span class="line">        <span class="built_in">print</span>(3)</span><br><span class="line">p = Person()</span><br><span class="line">p.eat2()</span><br></pre></td></tr></table></figure><h3 id="P26、类、对象、类对象、实例对象、实例的叫法规范"><a href="#P26、类、对象、类对象、实例对象、实例的叫法规范" class="headerlink" title="P26、类、对象、类对象、实例对象、实例的叫法规范"></a>P26、类、对象、类对象、实例对象、实例的叫法规范</h3><h3 id="P27、方法的划分"><a href="#P27、方法的划分" class="headerlink" title="P27、方法的划分"></a>P27、方法的划分</h3><p>· 实例方法：第一个参数接受实例<br>· 类方法：第一个参数接受类<br>· 静态方法：non<br>划分的依据：方法的第一个参数必须接受的数据类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">def eat2(self):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是一个实例方法&#x27;</span>,self)</span><br><span class="line">    @classmethod</span><br><span class="line">    def leifangfa(cls):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是一个类方法&#x27;</span>,cls)</span><br><span class="line">    @staticmethod</span><br><span class="line">    def jiangtaifanfa():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是一个静态方法&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Person.eat2()</span><br><span class="line">&gt;&gt;&gt;TypeError <span class="comment">#确少self</span></span><br></pre></td></tr></table></figure><h3 id="P28、方法的储存"><a href="#P28、方法的储存" class="headerlink" title="P28、方法的储存"></a>P28、方法的储存</h3><p>(1)函数也是对象<br>(2)方法也保存在类的__dict__中，没有在实例当中的 </p><h3 id="P29、要求"><a href="#P29、要求" class="headerlink" title="P29、要求"></a>P29、要求</h3><p><strong>使用注意</strong>：<br>1.语法<br>2.不同类型的方法的规则<br>3.不同方法的调用</p><h3 id="P30、实例方法"><a href="#P30、实例方法" class="headerlink" title="P30、实例方法"></a>P30、实例方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#标准调用</span><br><span class="line">class Person:</span><br><span class="line">    def eat(self,food):</span><br><span class="line">        print(&quot;在吃饭&quot;,food)</span><br><span class="line"></span><br><span class="line">p=Person()</span><br><span class="line">p.eat(&quot;potato&quot;)#只需要传一个参数</span><br><span class="line">----------------------------------</span><br><span class="line">class Person:</span><br><span class="line">    def eat(): #报错，因为以为没有要求传self，但p.eat实例调用时硬塞了一个</span><br><span class="line">                实例参数self</span><br><span class="line">        print(&#x27;在吃饭&#x27;)</span><br><span class="line"></span><br><span class="line">p.eat()</span><br></pre></td></tr></table></figure><h3 id="P31、类方法"><a href="#P31、类方法" class="headerlink" title="P31、类方法"></a>P31、类方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    @classmethod #装饰器的作用：在保证原函数不变的情况下，直接给这个函数增加一些功能</span><br><span class="line">    def leifangfa(cls,a):</span><br><span class="line">        print(&quot;这是一个类方法&quot; , a)</span><br><span class="line">        </span><br><span class="line">Person.leifangfa(123)</span><br><span class="line"></span><br><span class="line">p = person()</span><br><span class="line">p.leifangfa(666)</span><br><span class="line"></span><br><span class="line">func = Person.leifangfa</span><br><span class="line">func(111)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="P32、静态方法"><a href="#P32、静态方法" class="headerlink" title="P32、静态方法"></a>P32、静态方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    @staticmethod #装饰器的作用：在保证原函数不变的情况下，直接给这个函数增加一些功能</span><br><span class="line">    def jingtai(cls):</span><br><span class="line">        print(&quot;这是一个类方法&quot;)</span><br><span class="line">        </span><br><span class="line">Person.jingtai()</span><br><span class="line"></span><br><span class="line">p = Person()</span><br><span class="line">p.jingtai()</span><br><span class="line"></span><br><span class="line">func = Person.jingtai</span><br><span class="line">func()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="P33、不同类型的方法中访问不同类型的属性的权限问题"><a href="#P33、不同类型的方法中访问不同类型的属性的权限问题" class="headerlink" title="P33、不同类型的方法中访问不同类型的属性的权限问题"></a>P33、不同类型的方法中访问不同类型的属性的权限问题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    age = 0</span><br><span class="line">    def shilifangfa(self):</span><br><span class="line">        print(self)</span><br><span class="line">        print(self.age)</span><br><span class="line">        print(self.num)#可访问到对象属性</span><br><span class="line">    @classmethod</span><br><span class="line">    def leifangfa(cls):</span><br><span class="line">        print(cls)</span><br><span class="line">        print(cls.age)</span><br><span class="line">        print(cls.num)   #不能通过类访问实例属性</span><br><span class="line">    @staticmethod</span><br><span class="line">    def jingtaifangfa():</span><br><span class="line">        print(Person.age) #可以通过类访问类属性</span><br><span class="line">P = person()</span><br><span class="line">P.num = 10</span><br></pre></td></tr></table></figure><h3 id="类相关补充"><a href="#类相关补充" class="headerlink" title="类相关补充"></a>类相关补充</h3><h3 id="P34、补充-元类"><a href="#P34、补充-元类" class="headerlink" title="P34、补充-元类"></a>P34、补充-元类</h3><p>类也是由类创建出来的，这个类就是元类。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">num = 1</span><br><span class="line">print(num.__class__)  #输出int</span><br><span class="line">%------------------------------------------</span><br><span class="line">s = &quot;abc&quot;</span><br><span class="line">print(s.__class__)   #输出str</span><br><span class="line">%------------------------------------------</span><br><span class="line">class Person:</span><br><span class="line">pass</span><br><span class="line">p = Person()</span><br><span class="line">print(p.__class__)  #输出Person</span><br><span class="line">%------------------------------------------</span><br><span class="line">print(int.__class__)  #输出type</span><br><span class="line">#其实也是num.__class__.__class___</span><br><span class="line">print(type.__class__)#依然输出type</span><br></pre></td></tr></table></figure><p><strong>type</strong>即为元类</p><h3 id="P35、补充-类对象的创建方式"><a href="#P35、补充-类对象的创建方式" class="headerlink" title="P35、补充-类对象的创建方式"></a>P35、补充-类对象的创建方式</h3><p>可以class直接创建<br>也可以调用type函数创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def run(self):</span><br><span class="line">    print(self)</span><br><span class="line">xxx = type(&quot;Dog&quot;,(),&#123;&quot;count&quot;:0,&quot;run&quot;:run&#125;)</span><br><span class="line">print(xxx)</span><br><span class="line">print(xxx.__dict__)</span><br><span class="line"></span><br><span class="line">d.xxx()   #不是d.Dog</span><br><span class="line">print(d)</span><br><span class="line">d.run()</span><br></pre></td></tr></table></figure><h3 id="P36、类对象创建时，元类的查找机制"><a href="#P36、类对象创建时，元类的查找机制" class="headerlink" title="P36、类对象创建时，元类的查找机制"></a>P36、类对象创建时，元类的查找机制</h3><p>1.检测类对象是否有明确的__mateclass__属性。<br>2.检测父类中是否存在__mateclass__属性。<br>3.检测模块中是否存在__mateclass__属性。<br>4.通过内置的type这个元类来创建这个类对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">查找一般是现在自己里面找，没有就去父类，父类没有就往上找模块，模块没有就是type</span><br><span class="line">#1模块级别的指定</span><br><span class="line">__metaclass__ = xxx </span><br><span class="line">#2</span><br><span class="line">class Animal:</span><br><span class="line">    pass</span><br><span class="line">#3</span><br><span class="line">class Dog(Animal):</span><br><span class="line">    pass</span><br><span class="line">#4</span><br><span class="line">class Dog:</span><br><span class="line">    __metaclass__ = xxx</span><br><span class="line">    pass</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="P37、补充-类的描述"><a href="#P37、补充-类的描述" class="headerlink" title="P37、补充-类的描述"></a>P37、补充-类的描述</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    关于这个类的描述，类的作用，类的构造函数等等；类属性的描述</span><br><span class="line">    Attributes:</span><br><span class="line">    count: int 代表人的个数</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    count = 1</span><br><span class="line">    def run(self, disance, step):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        这个方法的作用效果</span><br><span class="line">        :param distance:blahblah</span><br><span class="line">        :param step:blahblah</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        print(&quot;跑步&quot;)</span><br><span class="line">        return  distance,step</span><br><span class="line">help(Person)  #</span><br></pre></td></tr></table></figure><h3 id="P38、生成注视文档"><a href="#P38、生成注视文档" class="headerlink" title="P38、生成注视文档"></a>P38、生成注视文档</h3><h3 id="属性相关补充"><a href="#属性相关补充" class="headerlink" title="属性相关补充"></a>属性相关补充</h3><h3 id="P39、补充-私有化属性的概念和意义"><a href="#P39、补充-私有化属性的概念和意义" class="headerlink" title="P39、补充-私有化属性的概念和意义"></a>P39、补充-私有化属性的概念和意义</h3><p>限定属性的访问的方法</p><h3 id="P40、补充-访问权限测试区域划分"><a href="#P40、补充-访问权限测试区域划分" class="headerlink" title="P40、补充-访问权限测试区域划分"></a>P40、补充-访问权限测试区域划分</h3><h3 id="P41、补充-访问权限测试区域划分"><a href="#P41、补充-访问权限测试区域划分" class="headerlink" title="P41、补充-访问权限测试区域划分"></a>P41、补充-访问权限测试区域划分</h3><p>注意：python并没有真正的私有化支持，但是，可以使用下划线完成伪私有的效果。如_y、__z。<br>一个_为保护，两个_为私有化</p><h3 id="P41、私有化属性-共有属性"><a href="#P41、私有化属性-共有属性" class="headerlink" title="P41、私有化属性-共有属性"></a>P41、私有化属性-共有属性</h3><p>1.类的内部访问，也就是类的实例方法中<br>2.子类(延伸类)内部访问<br>3.模块其他位置访问</p><ul><li>1.类访问（父类，派生类）</li><li>2.实例访问（父类实例，派生类实例<br>4.跨模块访问<br>import&#x2F;from xxx import *</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Animal:</span><br><span class="line">    x = 10</span><br><span class="line">    def test(self):</span><br><span class="line">        print(Animal.x)</span><br><span class="line">        print(self.x)</span><br><span class="line">        pass</span><br><span class="line">%----------------------</span><br><span class="line">class Dog(Animal):</span><br><span class="line">    def test2(self):</span><br><span class="line">        print(Dog.x)</span><br><span class="line">        print(self.x)</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">a = Animal()</span><br><span class="line">a.test()#类的内部访问，通过类内部定义的函数访问</span><br><span class="line"></span><br><span class="line">d = Dog()</span><br><span class="line">d.test2()#延伸类的访问（通过延伸类内部定义的函数访问）</span><br><span class="line"></span><br><span class="line">print(Animal.x)#模块的其他部分</span><br><span class="line">print(Dog.x)</span><br><span class="line">print(a.x)</span><br><span class="line">print(b.x)</span><br><span class="line"></span><br><span class="line">import xxx              #模块的其他部分访问</span><br><span class="line">print(xxx.a)</span><br><span class="line">from xxx import *</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h3 id="P42、私有化属性-受保护的属性"><a href="#P42、私有化属性-受保护的属性" class="headerlink" title="P42、私有化属性-受保护的属性"></a>P42、私有化属性-受保护的属性</h3><p>_y:一个下划线</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Animal:</span><br><span class="line">    _x = 10</span><br><span class="line">    def test(self):</span><br><span class="line">        print(Animal._x)</span><br><span class="line">        print(self._x)</span><br><span class="line">     pass</span><br><span class="line">#--------------------</span><br><span class="line">class Dog(Animal):</span><br><span class="line">    def test2(self):</span><br><span class="line">        print(Dog._x)</span><br><span class="line">        print(self._x)</span><br><span class="line">     pass</span><br><span class="line"></span><br><span class="line">a = Animal()</span><br><span class="line">a.test()#类的内部访问</span><br><span class="line"></span><br><span class="line">d = Dog()</span><br><span class="line">d.test2()#延伸类的访问</span><br><span class="line"></span><br><span class="line">print(Animal._x)#模块的其他部分,可以强行访问，有警告</span><br><span class="line">print(Dog._x)</span><br><span class="line">print(a._x)</span><br><span class="line">print(b._x)</span><br><span class="line"></span><br><span class="line">import xxx              #模块的其他部分访问,不可访问</span><br><span class="line">print(xxx.a)</span><br><span class="line">from xxx import *</span><br><span class="line">print(a)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一般只能在类内部访问，或者子类内部访问。</p><h3 id="43、私有化保护-私有属性"><a href="#43、私有化保护-私有属性" class="headerlink" title="43、私有化保护-私有属性"></a>43、私有化保护-私有属性</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">class Animal:</span><br><span class="line">    __x = 10</span><br><span class="line">    def test(self):         #定义一个实例方法</span><br><span class="line">        print(Animal.__x)</span><br><span class="line">        print(self.__x)</span><br><span class="line">     pass</span><br><span class="line"></span><br><span class="line">#--------------------</span><br><span class="line"></span><br><span class="line">class Dog(Animal):</span><br><span class="line">    def test2(self):</span><br><span class="line">        print(Dog.__x)</span><br><span class="line">        print(self.__x)</span><br><span class="line">     pass</span><br><span class="line"></span><br><span class="line">a = Animal()</span><br><span class="line">a.test()#类的内部访问，可以访问</span><br><span class="line"></span><br><span class="line">d = Dog()</span><br><span class="line">d.test2()#延伸类的访问，不可以访问</span><br><span class="line"></span><br><span class="line">print(Animal.__x)# 模块的其他部分,不可访问</span><br><span class="line">print(Dog.__x)</span><br><span class="line">print(a.__x)</span><br><span class="line">print(d.__x)</span><br><span class="line"></span><br><span class="line">a = 1</span><br><span class="line">import xxx              #模块的其他部分访问,不可访问</span><br><span class="line">print(xxx.a)</span><br><span class="line">from xxx import *</span><br><span class="line">print(a)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="45、补充-私有属性的应用场景"><a href="#45、补充-私有属性的应用场景" class="headerlink" title="45、补充-私有属性的应用场景"></a>45、补充-私有属性的应用场景</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    #作用：当我们创建好一个实例对对象之后，会自动调用这个方法，来初始化这对象</span><br><span class="line">    #init是单词初始化initialization的省略形式</span><br><span class="line">    def __init__(self)</span><br><span class="line">    self.__age = 18</span><br><span class="line">    def setAge(self,value):</span><br><span class="line">        if isinstance(value,int) and 0&lt;value&lt;200:</span><br><span class="line">        self.__age = value</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;您输入的数据有误，请重新输入&quot;)</span><br><span class="line">    def getAge(self):</span><br><span class="line">        return self.__age</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line">p1 = Person()</span><br><span class="line">p1.setAge(20)</span><br><span class="line">p2 = Person()</span><br><span class="line">print(p1.getAge())   #访问age</span><br><span class="line"></span><br><span class="line">print(p1.__age)      #报错，只能在类内部访问</span><br><span class="line">print(p2.__age)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="P48、只读属性-方案1"><a href="#P48、只读属性-方案1" class="headerlink" title="P48、只读属性-方案1"></a>P48、只读属性-方案1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    def init(self): #初始化方法，通过方法设置属性</span><br><span class="line">        self.__age = 18</span><br><span class="line">    def getAge(self): #部分公开，通过方法实现</span><br><span class="line">        return self.__age</span><br><span class="line"> p1 = person()</span><br><span class="line">print(p1.getAge())</span><br></pre></td></tr></table></figure><h3 id="P49、只读-方案一优化"><a href="#P49、只读-方案一优化" class="headerlink" title="P49、只读-方案一优化"></a>P49、只读-方案一优化</h3><p>这节讲得真好，承上启下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## 49-python-面向对象-只读属性-方案一的优化</span><br><span class="line">1. ```python</span><br><span class="line">class Person(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.__age = 18</span><br><span class="line">     # 主要作用：可以以使用属性的方法来使用这个方法</span><br><span class="line">    @property</span><br><span class="line">    def age(self):   #部分公开，通过方法实现</span><br><span class="line">        return self.__age</span><br><span class="line">p1 = person()</span><br><span class="line">print(p1.age())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程のEtude </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青楼魅影</title>
      <link href="/2024/06/14/hello-world/"/>
      <url>/2024/06/14/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="青楼魅影"><a href="#青楼魅影" class="headerlink" title="青楼魅影"></a>青楼魅影</h2><p>作者：北冰洋</p><p><em>本文作为我社社刊废稿www</em></p><p>已经是入冬了，一同而来的还有新年。虽然小镇地处南方沿海，但今年的寒潮却凶猛得远超人们的想象。白天，家家户户都坚持着能不外出就不外出的原则，尤其是老人，一身老骨头可挨不了冻。居家休息的人们在屋内也生起了火，石头砌成一个小方格，底部石层留有缝隙通风，火在方格内烧着，当然，也不一定是方格。抵御寒冬，虽说用处不大。恰逢春节，偶尔有亲朋好友上门拜访，人一多，热闹起来，这才不觉得冷。所谓热闹是对抗寒冬的第一方法。</p><p>但小镇的热闹不属于白天，而属于夜晚。</p><p>   夜晚，人们都走出家门，来到灯火通明的大街上，仿佛约定好一般。尽管街道并不那么宽广——加上沿街排队的小贩就显得更窄了——可人们似乎很享受这摩肩接踵的氛围。走在石板路上，木质的鞋底与地面发出摩擦与碰撞的声音，但很快淹没在人海中。在街灯红晕的光下，人们的影子互相重叠，又彼此分开。街边小贩吆喝着，不停向路人推荐自己的食物，可客人往往都是自己来的——追寻香味，耐不住食欲才来的。明明只是南方一个小镇，却能品尝到五湖四海的美食。</p><p>   街边的房子鳞次栉比，但无一不亮着自己的光。放眼望去，茶馆、酒馆、肉铺，繁华的光景，倒映在街边的河面上，随着河水流淌。桥上，有人挑着担子，有人推着推车，艰难地爬上古桥，同街上乘着豪华马车的贵族形成鲜明对比。贵族们今晚有要到哪放纵？只有他们自己知道。马蹄踏着石板路，声音渐行渐远。不过，夜晚终究是属于每一个小镇居民的，在这块黑色的画布上，居民们可以恣意点染，无论是在灯红酒绿中潇洒一回，还是在茶馆听听戏唠唠嗑。酒的甘醇与茶的干涩纵然不同，但人们仍在共享着这个繁华的夜市。</p><p>   说到茶，就不得不提到小镇特产的清耀茶了。小镇地处沿海，年降雨量充沛，温度适宜，太阳辐射弱，使得甘醇的清耀茶成为该小镇的响亮名牌。这也是小镇的主要经济作物。每年，有无数外地商人前来寻购茶叶，甚至有的外国商人不惜远洋东渡。有了家喻户晓的名茶，当地自然少不了茶馆了。小镇的茶馆遍地丛生，在这里，一群人，一壶茶，一叠花生，便是一日中的唠嗑，再加上严冬之日，白天大家又不愿意上街，所以现在的茶馆人满人寰。不过大家也都不害羞，桌上，无论是邻居，还是没打过照面的人，都能说上一天。要说最累的只能是茶馆的招待员了，不是这里茶喝光了，就是那里花生吃完了，在吆喝声中四处跑动，忙的不亦乐乎。</p><p>   而能在这小镇上与茶馆相提并论，还得是青楼。</p><p>   青楼，不仅是男人寻欢的场所，更是文人诗兴大发的宝地。</p><p>   小镇的青楼只在夜晚开放。与装饰古朴的茶馆不同，青楼的气派豪华绝对是小镇夜景的一道风景线。夜晚，纵使月光如何皎洁明亮，小镇人们眼里，满是青楼的五光十色。男人们在酒馆小酌一口，便趁着酒意来到青楼。指定好自己中意的姑娘，她便会带你到她的闺房。当然，有的姑娘人气太旺，就只好排队了。忍不住寂寞咋办？那就只能加价。有的人为了今夜能见上自己心怡的姑娘一眼，不惜花重金。正因为有这样的男人在，小镇的青楼才能如此熠熠生辉。<br>   在遍地的青楼中脱颖而出的，便是妇孺皆知的月荣阁。</p><p>   月荣阁的特别之处，在于它的地理位置。不同其他的青楼，月荣阁并不在热闹的小镇中心，而是在小镇的边缘地带，四周都是一些杂铺店，唯独有家隔街对望的茶馆与它共同肩负起了这篇区域的热闹。月荣阁的装修也并不算华丽，昏暗的门前吊着几排灯笼，风一吹便发出吱呀吱呀的响声，波浪似的翻滚着。门内到是宽敞明亮，木质地板上铺着毯子，让人在冬天走过时脚底一整暖意。一楼空间不大，几只蜡烛便把门内照得通亮。而二楼便主要是姑娘们招待客人的地方。二楼有很多房间，每个姑娘都有一间自己专属的房间，用来招待客人。房门配有锁，只能从屋内上锁，而锁的钥匙都是由房间的主人保管。最大的房间是属于“花魁”，装饰比一般房间要精致许多，木制的床装饰着雕花，房间内有两扇窗户，一扇面向正门，可以看到对面的茶馆，另一扇面向着青楼的后门，房内弥漫着淡淡的芳香。由于是冬天，每个房间都在方炉里生了火。</p><p>经常来到顾客都知道，一楼有一位老婆婆住着，貌似青楼好像是她家的祖上的遗产，后来因为儿子在外不争气，欠了人家很多钱，最后把这间房子拿去抵债，后来别人便将其修建成月荣阁。人们出于好心，便让这位老人住在月荣阁一楼小房间了，平时客人也会来找老婆婆问事，自然老婆婆也对月荣阁的姑娘和客人们非常熟悉。<br>说到这，好像还并没有解释为什么月荣阁能够在小镇的青楼中独具一档。</p><p>如果一个人可以代表一座青楼的话，那必然是花魁。</p><p>月荣阁的花魁是小镇里最美丽的姑娘，没有一个男人不为她的美貌所折服。她的花名叫做美玖。对男人来说，就如同她的花名一般，她就像一瓶令人垂涎欲滴的美酒。自从人们知道月荣阁有一名倾国倾城的姑娘后，每天都会有无数男人前来寻欢，甚至也有女人来一睹芳容，想看看所谓小镇的绝世美颜到底是否名副其实。就这样，一传十十传百，整个小镇都知道了美玖和月荣阁的存在，最后传到京城官员到底耳朵里，官员们从京城南下，只为与美玖相见一面，事后便心满意足地回城。月荣阁也成为名震四方的第一楼。 </p><p>追求者众多，自然也就不能满足每一个人。能够指名美玖的都不是一般的平民百姓，通常都是达官贵族，或是当地有威严的帮派首领。</p><p>小镇里的帮派活动也十分凶残，经常有帮派相约在某地决斗，刀光剑影间，便是血流成河。居民们很熟悉各个帮派的成员，有时走在街上遇见他们往往会避而远之，不敢招惹，生怕他们记住你的脸。</p><p>小镇里，有两股帮派势力最为猖獗，分别是玉龙帮与罡风帮。</p><p>玉龙帮的首领若森原本是隔壁镇上威名远扬的龙首帮首领的儿子，后因龙首帮内部分裂，加上外部势力的干扰，首领惨死于自己部下的手中，幸运的是若森逃到了一户农民的家里，后随他们来到了这个小镇上，才免遭一死。因为父亲的死，若森从小便痛恨背叛，他在小镇上集结朋友成立了玉龙帮，并对内部成员进行多次调整，有任何不忠之心的成员都被残忍杀害，玉龙帮延续龙首帮的做法，将所有死于自己手上的人的首级全部收集起来，这是若森在向他的父亲致敬，若森始终希望这众多首级之中能出现当年背叛龙首帮的人的头颅。</p><p>而罡风帮的首领是夏月，本是小镇当地的一个书生，因为天资聪颖，从小便被人们看好，都认为他以后一定能金榜题名，顺利前往京城当官。谁知后来因在京城做官的叔叔贪污，被中央下令灭门，而夏月当时正好远渡东瀛求学，才逃过一劫。回国之后，得知家里的人全被政府所杀害，夏月果断决定弃文从武，决心要打到政府，建立自己的政权，于是便在当地建立了罡风帮，多次向百姓宣传推翻政府的思想，并通过一系列武力斗争稳固了自己在小镇的地位。</p><p>罡风帮与玉龙帮整体处于相互斗争中，但却不发生大规模的战斗。同时，夏月与若森也是熟人，两人同病相怜，却又互不相让，无论是在势力上，还是在女人上。</p><p>没错，夏月和若森都在追求美玖。尽管美玖的追求者遍布九州，但无疑夏月与若森两人的竞争力最大。</p><p>记得不久前小镇上有传言，说若森与夏月要通过男人的决斗来赢得对美玖的追求权，输的一方必须放弃。期间一直有传闻说是若森赢了，但也有人说是夏月赢了，真相一直在人云亦云中扑朔迷离，人们也不敢直接去询问罡风帮或玉龙帮的成员。</p><p>所谓男人的决斗，无非就是打架，比剑之类的。一方认输后，另一方自然就是赢家。</p><p>在他们对决期间，美玖作为店里的头牌，依然在月荣阁招待着客人。无数达官贵族前来献殷勤，但都被美玖一一回绝。人们不免怀疑美玖已有心上人了，是否是在夏月和若森之中呢？每当有人问起，美玖只是浅浅一笑，微微低下头为客人倒酒，仿佛酒中就是她的全部回答，人们也便不再多问。</p><p>我虽然生活在这个小镇上，却从未与美玖见过一面，也从未想过与她相见，在这个将仰慕美玖当做思想标杆的小镇，我全然像个异邦人。不过偶尔在茶馆闲聊时，也能从别人的只言片语中勾勒出她的模样。据说，她祖上也是一个开茶馆的。</p><p>本以为我与她永远不会有联系，直到那个夜晚。</p><p>不知何时，雨突然下了起来，冲刷的小镇的傍晚。我坐在月荣阁对面的茶馆里，看着房檐上的雨滴缓缓落下，在馆外的石板路上溅起一圈涟漪。雨下得十分凶猛，丝毫没有喘息的意思。寒冬，黑夜来的比以往要早，傍晚六点时分，门外已是伸手不见五指。</p><p>随着雨势缓缓减弱，街上逐渐热闹了起来。一排排灯笼亮起，行人在街上信步游走。茶馆的人也多了起来，除了我旁边那桌老人是从早坐到现在的，其余几桌客人都换了一批又一批。</p><p>“老板，花生米又没咯！”那位披着军大衣的老人叼着牙签吆喝着。</p><p>“诶来了来了！”</p><p>“老板，大方点嘛，大伙儿都天天在这儿唠嗑呢。”</p><p>“哎呀，你们都在这儿喝了十几年了，我的小儿子都记住你们啦，来，阿刁，过来和姥爷们打声招呼。”</p><p>老板向坐在角落那桌的小孩挥了挥手，那是老板儿子阿刁，今年刚上小学。他手里攥着笔，眼神很认真，似乎在写着什么东西。</p><p>老板已过天命之年，传闻他家还有一个女儿，已经远嫁他乡，如今他和妻子经营着这家茶馆。在茶馆遍地的小镇，像他们这种装修简陋，地址偏僻的小店，实在没啥竞争力。唯一拿得出手的，就是传了几代的泡茶功夫。虽说清耀茶有其独特的沏茶方法，但这家茶馆的清耀茶却比别的茶馆的更加甘醇，茶香不仅悬于鼻腔，更是流于齿间。</p><p>自从几年前与朋友在此处饮过一会后，我便认定，没有其他任何茶馆对清耀茶的理解胜过这座茶馆了。此后几年，我习惯性地来这座茶馆，工作也好，休息也罢，看看书看看报，有时和隔壁的姥爷们唠唠嗑，甚至辅导老板的儿子做功课。平凡的日子的惬意如同清耀茶的余香萦绕心头。</p><p>看着阿刁在为眼前的功课烦恼时，我便懂事地走到他桌旁。</p><p>“阿刁，又有不会的题目啦？”我悄悄在他旁边坐下。</p><p>“碧雨叔，您可算来了。”果然，看到他对我的来访并不感到惊讶时，我就知道他已经在期待我的到来了。</p><p>“阿刁呀，小学生了，也要学会独立思考了哦。”</p><p>“可是……我就是看不懂呀。”</p><p>“哎，这不就是简单的加法嘛，你在仔细读读题，来，我帮你把关键的信息画出来。”</p><p>接过他的笔，我便在他的册子上画了几条横线。这样的互动我和阿刁已经再熟悉不过了，阿刁也想着只要把笔交给我，再难的题都不过只是白纸黑字。</p><p>“小雨，又在教阿刁学习呀。这个家伙，书怎么都念不进去。多谢了你哈。”老板娘从我身边经过，手上端着一叠花生米。</p><p>“哪里，我也是闲着。”</p><p>“哦？在等人吗？”</p><p>老板娘一眼就看穿我的心思。</p><p>“是啊，那家伙每次都要我等那么久。”我无奈地抱怨道。</p><p>窗外，雨后的天空也没想象中皎洁。月光将云层冲刷得浓淡不一，街对面的月荣阁依旧庄严地站立着，只是客人较往常稀少了许多。看来月荣阁已经只限于有权人士娱乐了，闲人甚至不能在门前停驻。</p><p>地上的积水映着来往的行人，行人踏着积水走走停停。</p><p>我回到的桌前。桌上的茶水马上见底，不得不叫老板再加一壶茶水了。</p><p>正当我准备朝老板挥手时，门帘处突然出现了个熟悉的身影。</p><p>“没让你久等吧，白碧雨你也是，每次都来这么早……看看你，茶都喝完了，老板再来壶茶。”</p><p>有点逆光，我看不清她的脸。但这声音准没错，就是萧绫女。</p><p>“绫女，是你每次都来太晚了吧……”</p><p>老板又端上一壶慢慢的热茶，香味沁人心脾。</p><p>萧绫女若无其事地在我对面坐下，圆框眼镜后的双目充满着无辜。</p><p>“绫女，你刚刚去哪了？”</p><p>“啊？你说啥呢，我从家里走过来的呀。刚下过雨嘛，我不敢走太快，所以就……”</p><p>“绫女呀，虽然你挺聪明的，但你还真不擅长说谎。”我嘲讽道。</p><p>萧绫女仿佛被我说穿心事一般，眼神开始闪躲……</p><p>“……怎么发现的。”</p><p>“你的眼镜啊。外面天那么冷，如果你是赶路进来的，眼镜上一定会起一层雾才对。而且，我是看着你从门帘进来的，你根本没有机会擦拭眼镜。”</p><p>“……”</p><p>“老实交代吧，你到哪去了？”</p><p>萧绫女已经完全放弃狡辩。</p><p>“好吧……还是你看得仔细。其实我刚刚在对面的月荣阁。”</p><p>“月荣阁？”我还是第一次从萧绫女口中听到这个和她身份完全不沾边的名词，“你去那干嘛？”</p><p>“那个老婆婆，就是住在一楼的那个，好像生病了，我买了点草药送过去。”</p><p>看来她还是个乖孩子啊。</p><p>“顺便……”</p><p>“顺便？”</p><p>“顺便想看看美玖小姐的样子。我早就久仰大名了，真想看看所谓的仙子长啥样。”</p><p>“今天人不多吗？”我想起了方才从茶馆望向月荣阁的情形。</p><p>“嗯。听婆婆讲，美玖说今天要接见几位大客人，就没安排其它姑娘了。除了客人们外，月荣阁就只剩婆婆和美玖小姐了。”</p><p>“所以你见到了吗？”</p><p>“哎好可惜，今天本来是最好的机会了，谁知我到那边时，美玖小姐已经带客人进房间了。”</p><p>“那你去房间找她呀。”我明知故问。</p><p>“这咋可以。而且按道理房间门应该是锁了的，钥匙都由她们自己保管。”</p><p>“看来你很熟悉的嘛。”</p><p>“那是，我和婆婆比较熟。好不容易从婆婆口中知道今天这个好机会，谁知……”</p><p>萧绫女拿起茶杯，喝了一口茶，仿佛刚刚的长篇大论已让她唇焦口燥。</p><p>寒气透过开敞开的窗侵入屋内，我逆着风的方向望向馆外，冷风迎面袭来。从风的缝隙中，我看到月荣阁，没有往日的熙熙攘攘，几只灯笼摇曳着。</p><p>“话说，你有听说美玖小姐要嫁人了吗？”萧绫女打断我的思绪。</p><p>“嫁人？”</p><p>“对，嫁人，就是要结婚了。据说是她家长辈的要求，说是希望她早日结婚，找个可靠的男子，以后就不再去青楼了。”</p><p>“这……”当然，一向对青楼与美玖漠不关心的我自然没啥惊讶。</p><p>“不过大家也不知道她结婚后会不会搬出小镇，也有人说她的父母长辈们都在外地，希望她结婚后能和她丈夫一起去那边。这样也好，结束了自己的青楼生涯，离开小<br>镇，重新生活。真潇洒呀……”</p><p>“不是说那个帮派的首领要争夺美玖小姐吗？”我想起了罡风帮与玉龙帮首领的传闻。</p><p>“那个呀……谁知道呢，哎呀，我不是说我也是听说嘛。”</p><p>如果美玖要嫁给两个帮派首领的其中一人，离开小镇，那么势必有一方会放弃其在小镇的权利地位。这么说来，地位与女人，二者不可兼得啊。不知道美玖如何决定。</p><p>为了一个人，放弃一座镇，这个人究竟有多么重要？美玖，究竟又是怎样一个女人。</p><p>从和别人的对话中我听说，美玖自二十岁左右刚入青楼时就以是众星逐月的人物了，而到如今月荣阁已成名楼也已过了十年之久，期间美玖也遇见无数男人，无论是书生官员，还是权贵名流。我想能让美玖动心的，也一定是个好男人。</p><p>不知为何，明明与她未见一面，却自顾自地关心起她的未来了。</p><p>这时，茶馆的老板走了过来。似乎对我们的话题很感兴趣。</p><p>“你们在讨论美玖呀。”他笑着问道，两颗眼睛眯成一条线。</p><p>“是呀是呀。老板也听说了吗？”萧绫女热情地回答道。</p><p>“那当然，大伙不都在传嘛。据说呀，那两个人谁也不愿放弃呢。”</p><p>“那两个人？你是说，夏月大人和若森大人？”</p><p>“对呀，就是他两，他两不是争得不可开交吗？为了美玖。”</p><p>“谁知道呢，不过老板你觉得会是谁？美玖小姐最后选择的。”</p><p>“我觉得啊……还是夏月吧。”</p><p>夏月？为什么老板回这样认为？</p><p>“老板为什么会觉得是夏月君呢？”我问道。</p><p>“因为……夏月他虽然是帮派的首领，看起来是个只会用武力的家伙，实际上脑子很好使，以前是个书生嘛。美玖应该会喜欢那种吧哈哈哈。”老板乐呵呵地笑着，右手<br>挠了挠后脑勺，害羞地走了。</p><p>窗外，黑夜似乎要将小镇吞没，街上零零星星地撒着几粒光。街对面的月荣阁，依旧是门前冷落鞍马稀。二楼有间房亮着灯光，窗户紧闭着，透过纱窗，可以看见几个<br>人影。那就是美玖小姐接待客人的房间吧。</p><p>“黑夜呀，不要将我变成诗人。”萧绫女望着窗外，摇晃着茶杯里的茶水。</p><p>“绫女，你喝茶也不至于喝醉吧。”她又开始胡言乱语了。</p><p>“什么胡言乱语，我是说，这是个充满诗意的黑夜，我内心又充满无限的愁绪。”</p><p>“你能有啥愁绪呀？”</p><p>“当然是没能见到美玖小姐啦，这次见不到下次机会又不知道是何时，你看，明明今天很少……诶，快看！那边，好像有人……滚下来了！”</p><p>萧绫女指着月荣阁的方向。</p><p>我赶紧往月荣阁看去，视线穿过大门，看到一位娇小的女子躺在楼梯底部。</p><p>这么说的话……那个人是……</p><p>“绫女，你确定那个人是滚下来的吗？”我有点不知所措。</p><p>“是的，你刚刚没听到响声吗？物体滚落的声音。”</p><p>印象中确实有几声闷响。</p><p>“快，绫女！我们快过去，一定是发生什么事了！”情况紧急，来不及和老板道别，我将几两银子放在桌子上便匆忙离去。</p><p>我们飞速下楼，出了茶馆。茶馆旁边是间马棚，散发出一阵潮湿味，老马在里面耐心地嚼着草。我们踏着地面上的积水，来到月荣阁门前。</p><p>这是我第一次站在月荣阁门前。</p><p>月荣阁比我想象中的要小的许多。比起华丽，用庄严形容更加合适。门口的门帘被拉起，以至于我们在茶馆二楼的窗前便能透过门看清月荣阁一楼的部分。走进门后，<br>出现的便是那位女子。那位我们在茶馆目睹的滚落的女子。</p><p>那位人们口中的美若天仙的女子。</p><p>美玖小姐……吗？</p><p>不，按照绫女的说法，今晚月荣阁只剩美玖和老婆婆，来的客人也应该都是男人。毫无疑问，面前横躺于楼梯底的是美玖。</p><p>我未曾想过与她相见。但这丝毫不影响我见到她时的震惊。</p><p>纤细的手指如同白玉一般搭在胸口，微弯的细眉下双目紧闭。她身穿白绿色的汉服，仰面躺在我的面前，后脑勺紧贴着地板，想必刚刚遭受了重重的撞击。烛光下，雪<br>白的皮肤，像是雕刻家在大雪中勾勒出的仙女一般。</p><p>见我愣在原地，萧绫女摇了摇我的手。</p><p>“你愣着干嘛，快呀！快检查下美玖小姐的伤势啊！”</p><p>我这才反应过来，眼前的女子是刚刚从二楼楼梯滚落下来的。</p><p>突然，我听到二楼的房间不断传来响声。</p><p>二楼，还有人吗？是他们把……</p><p>“白碧雨你又怎么了？”</p><p>不行，还是先照顾美玖小姐吧。</p><p>我摸了摸她的脉搏。虽然不是第一次抓起女士的手，但唯独这次我却异常紧张。她的体温透过我的指尖传递给我，脉搏在跳动。还好，美玖小姐只是晕了过去。</p><p>我缓缓托起美玖小姐的头，想检查她头部的伤势。这时，我发现，比起她后脑勺的伤，她头部侧面的一处伤势更加严重。像是被什么重物敲打过，伤口不断渗着血。</p><p>“快，快去叫人来帮忙！”</p><p>“叫人……叫医生吗？可是这离医院有点远……”</p><p>“那就叫老婆婆过来，老婆婆呢？”</p><p>“啊，在一楼那个房间，我去问问。”萧绫女小跑走向内部左侧的那个房间，看起来她对那个房间十分熟悉。</p><p>咚咚咚……</p><p>“婆婆，你在吗？”</p><p>咚咚咚……</p><p>“婆婆，那我进来啦。”</p><p>萧绫女悄悄地转动把手，轻轻的打开一条门缝，蹑手蹑脚的走进去了。</p><p>我在门外了许久，隔着门，也不知道屋内在进行着怎样的谈话。</p><p>不一会，只见萧绫女从门缝中探出头来。</p><p>“可以了，你也进来吧，把美玖小姐也抱进来。”</p><p>老婆婆生病了，腿脚不方便，所以让我和美玖小姐去她的房间。</p><p>等等，把美玖小姐‘抱’进来。</p><p>我如同大腿灌了铅一般寸步难行。刚刚抚摸美玖小姐的手时都已如此紧张，更何况现在要抱起她。</p><p>“快啊，愣着干什么？一直开着门，冷气都进婆婆房间啦。快！”</p><p>不管了。我如履薄冰地用左手托起美玖小姐的腿，右手小心翼翼地托着她的头。抱起来时，裙子自然的下垂，花白的大腿一览无余。我正视着前方，一点一点的向老婆<br>婆的房间挪动。</p><p>好不容易走到门口。屋内的暖气扑面而来。我缓缓打开房门，侧着身子钻了进去。美玖小姐的身体隔着衣服贴着我，我却能感受到她炽热的体温。</p><p>我慢慢地将美玖小姐放在屋内的地毯上，头部侧面的伤口还流着血。</p><p>“美玖……又是怎么了……”</p><p>一阵微弱的声音传进我耳朵，不，更像是使出混声力气从喉咙里挤出几口气来。</p><p>循声望去，萧绫女坐在床上，扶着旁边的那个老人。那位就是老婆婆吧。</p><p>“老婆婆……”</p><p>“孩子，美玖怎么了？”老婆婆又问道。</p><p>“啊，美玖小姐啊，美玖小姐她好像从二楼沿着楼梯滚了下来。我和绫女在茶馆那边发现了，这才赶了过来。”我急忙回应到，生怕老婆婆再多说一个字。<br>“这样啊……”</p><p>只是，奇怪的是，美玖小姐的后脑勺的伤不是很严重，反倒是头部侧面的伤口，被重物击打的伤口。难道说，美玖在二楼被什么人袭击了，然后滚了下来？</p><p>袭击的目的是什么？是要杀了她吗？</p><p>疑惑与不安蔓延全身。</p><p>“那个，婆婆，你知道些什么吗？关于美玖小姐的。”</p><p>我开门见山地问了。</p><p>“喂，碧雨，”萧绫女插嘴道，“婆婆已经生病了，不要再让她说话了。”</p><p>“……没事，孩子，你是想听美玖的故事吧，我也老了，记得不是很清了……”</p><p>二楼房间里不断传来响声，像是有人在走动，找东西似的。美玖招待的客人还在里面做什么呢？屋外，细雨淋过的小街显得异常静谧，地上坑坑洼洼的水，在街灯的照耀下，使得小镇的街道看起来满是晶莹的补丁。月荣阁背后是一片泥地，新翻的泥土的气息弥漫在街道上。</p><p>婆婆说，月荣阁里的姑娘们被欺负已经是常事了，美玖也无法逃脱。为了不与官员权威作对，她劝我最好不要上楼找人理论。这也是美玖小姐对老婆婆的交代。</p><p>老婆婆眼含泪光，叙述起美玖小姐的故事。</p><p>老婆婆虽然在这住了快半辈子，但与美玖小姐相遇，还是在十年之前。那时的月荣阁还只是一座名不见经传的小楼。</p><p>那天，也是个雨夜，淅淅沥沥的雨流淌在小镇上。</p><p>那是婆婆身体还算健康，起码能自己走路。婆婆像往常一样坐在月荣阁门前，听着雨声，如同指尖叩击桌面的声音一般。</p><p>婆婆坐在藤椅上，望着白茫茫的雨中，突然出现了个人影。她还以为她老花眼了，只见一个衣衫褴褛的女孩趴在地上，慢慢朝月荣阁里爬去。</p><p>婆婆见状，连忙将女孩扶了起来，可她一个老人力气不大，她又吆喝店里的小妹们出来帮忙。最后几个人合力将女孩抬进了屋内。</p><p>众人给女孩擦干净了水，又换上了干净的衣服。</p><p>这时众人才回归神来，眼前的这个女孩，竟是如此美丽。吹弹可破的脸蛋，雪白的肌肤，虽然眼睛紧闭着，但这种神秘感让在场的所有女人都无语凝噎。</p><p>人们从未见过如此惊艳的容貌。</p><p>“……阿婆。”一个姑娘支支吾吾，她原本就是月荣阁的人。</p><p>“别说，我也知道。”</p><p>“阿婆！一定要把她留在月荣阁呀！”</p><p>“……这我知道……”婆婆有些犹豫。</p><p>“阿婆！这是位能改变我们月荣阁命运的仙女呀！”</p><p>“……可是，那几位大人怎么说？”婆婆口中的大人，就是她儿子的债主，也是月荣阁的创始人。</p><p>“哎呀，别管大人们了，要是能把她给留住，他们乐还来不及呢!”</p><p>“先别说了，去，去那块热毛巾来，别让她着凉了！”</p><p>听到命令后，一个姑娘立马奔去浴室。姑娘们都很听老婆婆的话。</p><p>“还有，谁去打碗姜汤过来，在厨房，我刚烧好的，本来打算留给晚上的客人喝。”</p><p>婆婆接过毛巾，先在那个女孩的身体上轻轻地擦拭，碧玉般的肌肤，让人不忍心用力。之后又将毛巾敷在了她的额头上。</p><p>之后，屋内的众人都在耐心地等待，等待女孩的苏醒。</p><p>“诶，你说，如果这个女孩留下，她一定是咱月荣阁的花魁吧！”床边的一个姑娘小声地说道。</p><p>“那还用说！别说咱们楼的花魁了，说是整个小镇的花魁也不为过！”另一个姑娘附和道，语气里带着些许骄傲。</p><p>“到时，咱们月荣阁一定会热闹起来吧。这身材容貌，让官人们从京城南下都不是说梦。”</p><p>床上的女孩双眼紧闭，鲜红饱满的嘴唇微微张开，均匀的喘息声让在场的所有人都屏住呼吸。</p><p>“你们几个姑娘啊，以后可要好好照顾她哦。我是说，如果她愿意留下来的话。”婆婆</p><p>露出了慈祥的笑容。</p><p>“这么说，婆婆愿意收留她了喽！”</p><p>“那也得看人家愿不愿意呀。”</p><p>床边的几个姑娘乐开了花，像是又多了个小妹妹一样。</p><p>突然，床上传来嘀咕声。</p><p>“我们家……真的什么都没了……”</p><p>女孩有意识了。</p><p>众人赶紧围在了床边，想听清她在说什么。</p><p>女孩慢慢张开了眼，水灵灵的大眼睛注视着床边的陌生人们。</p><p>“这里是……”</p><p>她迷茫地问向众人。</p><p>“这里是月荣阁，小妹，刚刚是婆婆发现你躺在门口，外面下着雨，所以就把你抱进来了。”</p><p>“……”</p><p>“小妹，你叫啥名呀？”婆婆问道。</p><p>“美……美玖，爸妈都叫我美玖。”</p><p>“美玖啊，好名字啊，大家都很喜欢美酒呢。”</p><p>“……”</p><p>“话说美玖妹妹，你是怎么到这里来的。月荣阁的地理位置算是偏僻的了。”床脚那边的姑娘问道。</p><p>美玖没有回答。还是说不愿意回答。</p><p>“那……你的父母呢？”</p><p>“父母……不知道了。”美玖对她的家事缄口不提。</p><p>众人也一时语塞。</p><p>“那……美玖，你想不想留在月荣阁？”婆婆开口问道。</p><p>“这样的话……那就拜托了。”没想到美玖竟无一丝犹豫。</p><p>“太好了！”屋内的姑娘们又欢庆起来。</p><p>“这下，咱们月荣阁前途明朗啦！”</p><p>“……”</p><p>“来，美玖，先把这碗姜汤喝了。”婆婆端着碗，美玖接过，捧在手心，像是许久未见这种温暖。</p><p>从此，美玖每天便在月荣阁里居住，婆婆照顾着她的生活。</p><p>由于小镇的学位已经满了，美玖每天都只能去隔壁小镇上的学校念书。从月荣阁出发，每天要走许久山路，大概早上四五点中婆婆就喊美玖起床了。那时的月荣阁还很<br>平庸，也没钱让这位日后名满天下的花魁坐马车上学。那时的日子确实很辛苦，对婆婆和美玖都是如此。</p><p>等到美玖十五岁成年后，便安排她和其他几位姑娘一起工作。</p><p>期初，美玖还是一个害羞的姑娘，等到她熟悉这份工作后，她便轻松地当上月荣阁的花魁。客人都对她大加赞赏。月荣阁也越来越兴旺。</p><p>这几年来，婆婆都常常坐在门前，看着客人与姑娘们来往，直到最近才因为身体恶化离不了床。</p><p>婆婆和我们讲，之前有个男人经常性地来找美玖小姐，说是想把美玖小姐带回家。当然婆婆肯定是不同意的，但这也得问美玖的意思。</p><p>后来婆婆才知道，那个男人其实就是玉龙帮的首领若森。</p><p>听着婆婆将完美玖小姐的故事，我仿佛经历了一遍她的人生。充满谜团的人生。</p><p>为什么美玖小姐会出现在月荣阁门前？为什么她又同意留在月荣阁？她又为什么对家事缄口不提？</p><p>“婆婆，你还记得那天，就是发现美玖小姐倒在月荣阁门前那天，小镇上发生了什么吗？”我问道。</p><p>“那天的话……你这么一说，好像是有家茶馆起火了。”</p><p>起火？怪不得有股烟味……</p><p>等等，有烟味！</p><p>面前的萧绫女仿佛也察觉到异样，猛地吸了几下鼻子。</p><p>“碧雨，怎么有股烟味？”萧绫女张皇失措的问道。</p><p>着火了吗？</p><p>我环顾四周，又起身走向屋外。</p><p>“是二楼，快！美玖的那间房间！”我朝屋内大喊道。</p><p>紧接着，我冲上二楼。地板和台阶是木质的，走起来有些踉跄。冲到二楼，眼前是一扇庄严的木门。我拧了拧门锁，但是门锁得死死的，用力撞了几下后依然一动不动。凭我一己之力根本无法撞开这个门。</p><p>“绫女！快问问婆婆钥匙在哪？”</p><p>“婆婆说钥匙都是由美玖小姐自己保管的。”</p><p>没办法了，只能多叫些人来帮忙了。</p><p>“绫女，你和婆婆还有美玖小姐在房间里好好待着，关好房间门，别让火蔓延进来，我马上回来！”</p><p>我立马飞奔向茶馆，老板娘矮小的身影率先出现在我眼前。</p><p>“快……不好了！”我气喘吁吁。</p><p>“啥事呀这么慌张。”老板娘感到诧异。</p><p>“月荣阁……着火了……美玖小姐的房间。”</p><p>“什么？”</p><p>紧接着，我和老板娘一起呼喊茶馆里的人出来帮忙，大家听到后都仗义地冲出来帮忙。我实在跑不动了，跟在这一窝蜂后面。</p><p>看着眼前的帮手们都冲进了月荣阁，我加快脚步跟上。来到一楼，我先找到婆婆她们，打开房门，绫女正扶着婆婆坐着，而床上躺着美玖小姐，一动不动，虽然没有亲眼见过，但这场景一定与十年前一模一样。</p><p>一模一样的不只是昏迷的美玖小姐，还有火灾。</p><p>我紧接着上了二楼。二楼美玖小姐房间的已经打开，我检查了房门，发现完好无损。</p><p>难道，不是撞开的吗？</p><p>大家都挤在门口，不知所措地望着房间里的场景。</p><p>虽然房间里的火已经扑灭，但房间里有更令人害怕的东西。</p><p>房间里有两具尸体，两具男人的尸体。</p><p>突然有一个人抓住了我的肩膀，我感觉到了剧烈的摇晃。</p><p>“美玖！美玖呢？”那个人激动地质问着我。</p><p>我甩开他的手，定了神，才看清眼前的人——茶馆老板。</p><p>“……美玖小姐在一楼，早在我们发现火灾时就昏了过去，现在她……”</p><p>还没等我话说完，老板就冲下一楼了。</p><p>“喂，别太打扰她们了。”</p><p>为什么老板反应这么大，难不成，他是美玖小姐的狂热崇拜者吗？</p><p>回到眼前的凶案现场。我督促旁边的人赶紧报警，他们说刚刚已经报过了。</p><p>“警察说一会就到，让咱别破坏现场。”门口一个小胖子说道。他也是茶馆的老顾客了。</p><p>“对了，房门是怎么打开的，看起来不像是被撞开的。”我向他们问道。</p><p>“其实，我们来到这时，就已经发现老板进房间里了。”</p><p>“啊？”为什么，老板会这么快。</p><p>“他同咱们说，他在一楼找到了钥匙，就把门打开了。”</p><p>钥匙？钥匙不是由姑娘们自己保管的吗？</p><p>望向美玖小姐的房间。两具尸体，一具背靠墙坐着，腹部侧面插着把刀，另一具则跪趴着，脸埋进刚刚扑灭的火坑，身上有烧焦的痕迹，想必那就是火蔓延出火坑的途径。</p><p>我边从兜里拿出手套，边走进房间。</p><p>“喂，小伙子，警察说不要进案发现场。”门口的中年人对我警告道。</p><p>“我是侦探。”我亮出自己的身份。从前都是警方邀请我同他们一起调查案发现场，这次难得的比他们早到。</p><p>我首先检查了那具将头埋进火坑的尸体。尸体的面部已经被烧焦到不可辨别，仔细一看脸上还有刀割伤的痕迹，使得面部更加无法辨认了。掀起部分烧焦的衣服，腹部有一处刀伤，伤口上还有血迹。尸体跪在一片血泊中，看起来是死于失血过多。</p><p>紧接着我又走到面向茶馆的窗户。窗户紧锁着，我尝试打开，但其丝毫不动。第二具尸体就坐在这里，靠着墙。尸体的面部完整可辨，胸口处的衣服染成一片血红。我拨开他的衣服，发现他左胸处有一处刀伤。而刀现在正插在他的腹部侧面，看样子是被凶手连刺两刀。地上也是一滩血迹。</p><p>另外一扇面向后院的窗户打开着，下面是块泥地，由于刚下过雨，地上看起来光滑干净，没有脚印。</p><p>我环顾四周，试图找些东西。这时门口突然传来一阵骚动。</p><p>“哟，这不碧雨兄吗？又遇见你了。”以为警察走了进来。</p><p>他是小镇的警长，姓谢，也是我的发小。</p><p>“谢警长，这次我可是比你先到的。”我夸耀道。</p><p>“行行行，如果你能把案子解决了怎么说都行。听说这次死了两个大家伙。”</p><p>大家伙？</p><p>见我面露疑色，他问：“你不知道吗，刚刚有人报警说月荣阁死了两个人，分别是若森和夏月。喂，是谁报的警？站出来！”他朝门口的人群喊了一句。一个小个子走了<br>出来。</p><p>“说，这两个人是不是罡风帮和玉龙帮的头儿？”谢警长命令道。</p><p>“是！这绝对错不了！我向您保证！窗边儿那个死人的脸就夏月的，而火坑的那个死人，虽然脸都看不清了，但这衣服还看得清，这翠绿色的花纹，错不了，就是若森<br>的，是的！听说这是若森派人特意从京城那边做好送过来的，小镇上绝无第二条！我家里还有老婆孩子，我绝对不敢骗谢大人！”小个子畏畏缩缩，尽管双目坚定，但<br>嘴唇却不自主地颤抖着。</p><p>“行了行了，知道就好。怎么样碧雨兄，没错吧！”</p><p>竟然死的是若森和夏月……</p><p>我想起了他们争夺美玖小姐的事……</p><p>对了！美玖小姐！</p><p>“谢警长，二楼先交给你，我一会上来！”我突然记起刚刚茶馆老板冲下去找美玖小姐的事。</p><p>我紧忙推开婆婆房间的门。一进门，就看见地上躺着个男人。</p><p>“茶馆老板……他怎么躺在地上？”</p><p>“是我干的，”萧绫女回答道，语气里带着些自豪，“刚刚看见有个男人冲进来，我就一招把他打倒，结果仔细一看才发现是老板啊。”</p><p>美玖小姐依旧一动不动躺在床上，婆婆坐在床边照顾着她。</p><p>“看样子……头是有点毛病了。”婆婆念道。</p><p>“婆婆，要不明天一早咱派人送美玖小姐到京城的医院去？”萧绫女提出建议。</p><p>“也只好这样了，咱小镇也没有中用的医师。”</p><p>为了不打扰到她们休息，我先把老板拖出房间。萧绫女下手真狠，老板已经不省人事了。</p><p>“碧雨兄，你那什么情况？”谢警官走下了楼梯。</p><p>“他们说是这个茶馆老板开的门。”</p><p>“哦？是他开的门？咋开的？快，把他叫起来。”</p><p>我顺便把刚刚目睹美玖小姐从二楼滚下来的事告诉了他。</p><p>旁边几个小伙子拍了拍老板的脸，见他没反应，便从厨房那舀了碗水，毫不犹豫地朝他脸上泼过去。</p><p>“美玖！”老板立马清醒，大喊了一声。</p><p>啪，谢警官一个巴掌拍在老板额头上。</p><p>“你喊啥呢？快说，是不是你开的门？”</p><p>“美玖小姐在房间里休息呢，明天一大早就送他去京城就医。”我插了一句。</p><p>“这样啊……啊，那个，是我开的门，钥匙我是在门口地板那边毯子下翻出来的。”老板冷静了下来。</p><p>“地板？毯子？你咋知道在那边的？”</p><p>“其实啊，我基本上就住在对面的茶馆里，上次偶尔瞟到，一个姑娘往地毯下塞什么东西，我就觉得是钥匙。这次我冲过来时找了一下，果不其然。”老板解释道。</p><p>“所以老板来的时候门也是锁着的？”我问道。</p><p>“是的啊……啊是你呀碧雨，又来当侦探了吗？我跟你讲，楼上死了两个人……”</p><p>“你也别废话了，碧雨兄问啥你就答啥。”谢警官命令道。</p><p>“如果是这样，那就是场密室杀人事件了。”</p><p>身后传来一声女人的声音。是萧绫女，她从婆婆房间走了出来。</p><p>“绫女，婆婆和美玖小姐那边没事吧。”</p><p>“嗯，她们在休息了。我们就别去打扰了。”</p><p>“不过你和我想的一样，这确实看起来像是密室杀人事件。”</p><p>“密室？杀人？喂碧雨兄，可别说这些稀奇的词了。”谢警官疑惑地摸了摸后脑勺。</p><p>“因为，在老板来之前门是锁着的，而房间里的两扇窗户，一扇面向茶馆的正门方向的窗户是锁死的；另一扇面向后院的窗户虽然打开，但地上的泥地却没有脚印，也<br>就是没有犯人逃脱的痕迹。”</p><p>“原来如此。这就是密室杀人啊。没有凶手进出的痕迹。”谢警官若有所悟。</p><p>“诶，后院的窗户开着吗？我记得，一般都是关着的吧。现在大冬天的，窗户应该都是紧闭着的。”老板突然插嘴道。</p><p>“一般都是关着的吗？也就是说，凶手是从面向后院的窗户逃走的吗？但地上又没有足迹。”这依然是个密室。</p><p>我和谢警官决定上楼调查。</p><p>穿过聚集在门口的人群，好不容易挤进美玖小姐的房间。</p><p>扑面而来的烧焦味让人忍不住皱了皱了眉。谢警官走到若森的尸体那，仔细检查面部与伤口的情况。</p><p>“真狠心，凶手居然把他脸弄的那么令人反胃。要不是这衣服都认不出这是谁了。”谢警官清了清嗓子。</p><p>“凶手应该是把若森杀了后，便用刀划伤了他的脸，接着就把他的脸放到火坑里，使其烧焦成现在这个样子。”我说出了我的判断。</p><p>“那这具尸体呢？嘿，你可别说，夏月这小伙子长得还挺秀气的，没想到那么有威信的人竟是这般长相。”</p><p>“夏月的话，身上有两处刀上。一处在左胸，另一处是在腹部，也就是现在刀插着的位置。我想，致命伤应该是刀刺到了心脏。”我指着地上那一大滩血迹。</p><p>“原来如此。碧雨兄，你有什么看法吗？”</p><p>“什么看法?”</p><p>“是啊，你觉得凶手是怎么逃走的呢？”</p><p>我走到敞开向后院的那扇窗子。</p><p>“只是有一点头绪罢。”</p><p>“哦？说来听听？”谢警官投来期待的目光。</p><p>“首先，我们应该知道，凶手来到这个房间做了哪些事？”</p><p>“哪些事？不就是杀了两个人，然后不留踪迹的逃跑了吗？”</p><p>“这就是问题所在了。我是说凶手真的完整做了以上那些事吗？”</p><p>“哦!我知道了！”萧绫女不知何时走到我们跟前，眼睛里闪着光。</p><p>“凶手确实杀了人，但是，并没有逃跑。”萧绫女抛出了她的回答。</p><p>“没有逃跑？这是什么意思？”谢警官问道。</p><p>“就是啊，凶手还在这个房间里呀。在老板进入房间的时候并没有离开。”萧绫女解释道。</p><p>“没有离开？那……喂，你是当老板是瞎子吗？就算老板没看到，凶手也没机会趁乱逃出去呀，老板进来后紧接着茶馆的其他帮手也进来了。不可能在房间里呀。”</p><p>“但是啊谢警官，”她一副说教的模样，“如果老板说谎了呢？”</p><p>听到萧绫女这样回答道，我就明白她和我想一块去了。“是的，绫女应该也知道我要说什么了。凶手可能就是老板。他先……”</p><p>“诶别别别，让我来说，”萧绫女立马把我的话塞回我的嘴里，“首先，老板根本就没有出去，他杀了两个人后，把若森的脸划破，并埋入火坑。等火蔓延出火坑，烟味<br>开始弥漫，引起了我们注意，那时碧雨不是冲到房间撞了撞门吗？他知道我们进不来一定会去对面人多的茶馆找帮手。接着，等你离开后，就打开了房门，装作自己刚<br>刚到现场似的。”萧绫女干脆利落地说完了我想说的话。</p><p>“那这还等什么？犯人就在楼下，快，别让他跑了。”谢警官气冲冲地往楼下赶。</p><p>一楼，老板正畏畏缩缩地坐在地板上。旁边围了一群警察。</p><p>“冤枉啊！我没杀人啊！”老板的申冤想必谢警官已经听得耳朵起茧了快。</p><p>“别给我扯这些，现在立马承认，不然，待会在局子里审问有你受的。”谢警官巴不得立刻逮捕他。</p><p>老板看到我来了，像是看到曙光一般。</p><p>“碧雨啊，你看，我怎么会杀人啊！”</p><p>“老板，虽然我不想承认，但你今天确实很可疑，以及关于你进入房间的证词。”</p><p>“这没啥可疑的啊，我就是看到毯子下塞了钥匙。”老板还在顽强抵抗。</p><p>“还有，你那天的表现，为什么那么快就冲到了现场？”</p><p>“这是因为……”</p><p>“因为？”难道还有隐情？</p><p>“算了，老子不管了。我都说总行了吧！钥匙是美玖亲自给我的。”</p><p>“亲自？给你？”一旁的萧绫女惊讶地反问道。</p><p>“因为，她是我女儿嘛。”</p><p>在场的所有人都仿佛忘记了呼吸。月荣阁的大门敞开着，寒风呼啸直入，吹得人一身哆嗦。</p><p>许久，谢警官才支支吾吾地开口：“你说，美玖……小姐……是你的女儿？”</p><p>“正是如此啊警官。小的哪敢讲谎话。”</p><p>为什么美玖那天会倒在月荣阁门前？为什么老板又不忍承认美玖小姐是她女儿？老板望着门外，冰冷的石板路上仿佛冒着寒气。</p><p>起初美玖小姐本和老板住在一起，老板经营着祖上的茶馆，幸福美满的生活在小镇的繁华深处孕育。</p><p>而那天，严冬，雨夜，细雨如同针芒一般刺在房檐上。</p><p>“我们家……真的什么都没了……”这是老板的哀求，对闯入宅中的劫匪的哀求。</p><p>“要么，把你女儿留下；要么，我们就把这给烧光！”劫匪的目标不止是钱财。</p><p>老板抱着怀中的美玖，年仅十岁的美玖。而美玖的母亲早已逃离。</p><p>“那……那就烧光吧！”</p><p>“哼，你以为我们是给你条件来选的吗？我们不仅要烧光这，你的女儿也别想逃！”说罢，一个大个子劫匪便抽出了刀，指着老板的鼻子，刀的寒光令人不寒而栗。</p><p>突然，一阵黑影闪过。只听哐当一声，刀便飞到墙角边。</p><p>“你小子是谁？找死吗？”</p><p>一个年轻人前来救援，一脚将劫匪的刀踹飞。</p><p>“叔叔，你们赶紧逃，这边我来拖延。”只见眼前的年轻人又是一拳打在大个子劫匪的腹部。</p><p>老板一句话也不管多问。他抱着美玖，逃出了自己的老宅。</p><p>一路上，他不断喘着气，淋着冻得结冰的雨，始终不敢回头看。隐约中，背后似乎有炽热的火光。</p><p>老板一路奔跑，不知不觉中便跑到了小镇的边缘地带。</p><p>有家简陋的青楼。</p><p>“美玖啊，今后，你得靠你自己生活了。父亲就送你到这了。”</p><p>老板把美玖轻轻放在石板路上，雨还在凶猛地倾泻。</p><p>“我以后一定会回到你身边……哦不，那是你一定是个名满天下的花魁了吧，我有信心，我和你娘会回到你附近的，只是远远地看着你，好吗？”</p><p>大雨倾盆，冲刷石板路的响声早已掩盖住老板的告白。</p><p>“美玖，你快去吧。别念着我们了。”老板咬着牙站起身，扭头就往反方向去。纵使心如刀绞，也不再回头看一眼大雨中的女儿。脸上满是的，不知为雨还是泪。</p><p>第二天，整个小镇都知道了那座茶馆老宅着了火，现场发现了几具焦尸，已经无法辨认。</p><p>几年之后，月荣阁对面新建了一座茶馆，以其对清耀茶的独特沏法吸引了不少客人。而月荣阁也逐渐声名鹤立。</p><p>听完老板的叙述，大家又陷入沉默。</p><p>一旁的萧绫女已经在擦拭眼角的泪水了。她很容易共情。</p><p>“谢警官，我就是之前那座茶馆了主人，不信，我回去翻出祖上留的笔记来，总之，钥匙真的是女儿……美玖给的。”</p><p>现在大家都能理解老板那时的反应了。</p><p>“好吧，我相信你了。”谢警官扶起了他，“你先去那边休息吧。看来这案子还没完。”这话也是对我和萧绫女说的。</p><p>我和谢警官又陷入了迷茫。</p><p>刚刚我们的推理，是建立在房间一开始存在美玖小姐、夏月、若森、老板四个人的基础上，从而解开了密室之谜。但是现在老板证明他确实是凶案发生后进入房间的，</p><p>从而推翻了我们的推理。不过我们也可以以老板的证词进一步推理，凭老板的证词，他一开门就看见两具尸体，其中一具身上还起了火。他急忙在房间里寻找美玖小<br>姐，结果一无所获。这也就说明了老板进入房间时里面确实只有两位死者。</p><p>但这并不意味着最初进房间的除了美玖小姐外只有夏月和若森两人。</p><p>“婆婆，很抱歉打扰了，您还记得今晚同美玖小姐进入房间的有几人吗？”我悄悄地推开门，木门发出吱呀吱呀的响声。</p><p>“这个……我不太清楚了。”</p><p>如果若森或夏月带着跟班来的呢？</p><p>“啊……”听完我的想法后，谢警官又发出惊讶与疑惑的叫声。</p><p>“如果夏月或若森有一个人带着跟班也不足为奇。”</p><p>“你是说，凶手是那个跟班吗？”</p><p>“不，我觉得，凶手应该是若森。”</p><p>面前的两个人瞪大着眼睛看着我。</p><p>“喂，碧雨，你在说什么呢？若森他不在这吗？”绫女指了指那具火坑旁的尸体。</p><p>“我没说错。犯人就是若森。我们判断尸体的依据不就是他的衣服吗——那件在小镇上独一无二的衣服。先不考虑美玖小姐，因为她在上面人还活着的时候——我们在一楼<br>听到了动静——就已经滚了下来。如果，若森先将自己的衣服脱下，给夏月的跟班穿上，自己再穿上对方的衣服，接着把他做成无面尸，这样不就完成了伪装吗?”</p><p>四只眼睛凝视着我。</p><p>“所以，若森……杀了两人后，逃离了现场？”谢警官脸上写满了难以置信。</p><p>“是的，这也就很好的解释了为什么只有若森的脸被破坏的难以辨别。”</p><p>“但……但是，”萧彩萌开口说道，“密室之谜不是还没解决吗？既然凶手是若森，那他又是怎么逃出去的呢？”</p><p>“你说得对。”我肯定了萧绫女的反驳。</p><p>“所以，我认为现在还剩两种解答。”我仿佛宣布这场较量即将终结。</p><p>“首先，第一种解答，门根本没锁，凶手趁着我去茶馆找帮手时逃了出去。但是我又在闻到烟味时上楼拧了拧反锁的把手。也就是说，我在说谎。”</p><p>“不对不对？你在说啥呀碧雨兄。”谢警官瞪直了眼睛，仿佛听到京城被攻陷一般。</p><p>“你们肯定在想，老板不是都拿钥匙开门了吗？所以肯定是上锁了的呀。但是，老板开门只是将钥匙插进锁眼，扭动钥匙把门打开了而已。他先入为主地以为门一定是<br>锁的，所以一进月荣阁就先在门口的地毯下翻出钥匙。”</p><p>“难道碧雨你……”萧绫女面露恐惧。</p><p>“但事实上我知道，我并不会说谎。”</p><p>两人长舒一口气，但接着又问：“还剩一种解答是什么？”</p><p>“没有凶手。”</p><p>两人再次瞪大眼看着我。</p><p>“没有凶手。”我又说了一次。</p><p>“碧雨……没有凶手是什么意思？”谢警官严肃地问着我。</p><p>“字面意思，这起案件可以收工了，没有凶手。毕竟，没有人能够逃离这密室吧。所以，没有凶手。”</p><p>我不犹豫的转过头，只留下坚定的背影。</p><p>第二天，美玖小姐被送往京城的大医院看病。医生说是脑震荡，头部还有一处擦伤。不知何时能醒过来。</p><p>我和萧绫女一同来到京城看望美玖小姐。医院的护士身着白色衣服，那种纯洁无瑕的白，让人不忍玷污。药水的味道扑鼻而来，也算不上难闻。走廊里，大家脚步都很<br>轻，实际上也并没有多少人，有些患者被搀扶着艰难地迈出每一步。</p><p>“白碧雨，虽然我知道在医院里尽量不要讲话，但是我还是想问，你昨天的结论到底是啥？”萧绫女还在疑惑我的解答。</p><p>“字面意思。”我不痛不痒地答道。</p><p>“我其实大概懂你意思了，”萧绫女准备开始她的推理，“其实，凶手就是夏月吧，夏月杀了若森后畏罪自杀。”</p><p>她的解答似乎和我所说的“没有凶手”不沾边。</p><p>“绫女呀，”我停下脚步，“但这样夏月也是杀了人啊。我不是说没有凶手了吗？”</p><p>“难道你不认为夏月是凶手。”</p><p>“他当然不是凶手。绫女的说法我之前也考虑到了，但是有一点矛盾，如果若森是自杀，那么身上应该只有一处刀伤，也就是左胸的致命伤，可是，如今除了左胸的致<br>命伤外，腹部侧面也有一处，而且刀还插在上面，把插在左胸的刀拔出再刺进腹部就显得不自然了。”</p><p>“还有，他又何必把若森做成无面尸呢？”在我一连串的问题下，萧绫女也渐渐放弃了自己的想法。</p><p>我们来到美玖小姐的病房前。她宛如被冰冻的女神一般，静静躺在床上，雪白的床单没有一丝褶皱。</p><p>我和萧绫女走进房间。美玖小姐依旧双目紧闭着，就像昨天晚上一样。</p><p>“绫女，”我突然郑重其事地喊了她一句，她好像有点被吓到。</p><p>“我待会跟美玖小姐讲几句话，你先不要打断我。”</p><p>“啊？可是她不是昏迷了……”</p><p>我将食指放在嘴唇上，示意她先保持安静。她微微地点了点头。</p><p>“美玖小姐，我是来自小镇上的一位侦探。虽然你听不见我们讲话，但有些事我无论如何都要传达给你。”</p><p>“昨天晚上，你和夏月、若森一起进了月荣阁，你嘱咐婆婆今晚不要再招待别的客人了。可能因为你们三有重要的事要解决。我的第一反应就是你的婚姻，之前有传闻<br>若森和夏月要决斗，谁赢了谁就拥有对你的追求权，而那场决斗是若森赢了。那天你们三会面，就是解决这个问题，让你做出决定。”</p><p>“可是，你最后选择的是夏月。你爱夏月，因为他曾是你的救命恩人。十年前的雨夜，十年前的火灾，那个把你们一家从一无所有中解救出来的年轻人正是夏月。你后<br>来从你父亲那得知了这消息，便决定死心塌地跟着他。”</p><p>“然而，面前的若森，才是那场决斗的胜者。你不能不嫁给若森，但愿意以身相许之人却是夏月，所以，你就决定以死来了结这纠纷。我的意思是，你决定和夏月殉<br>情。”</p><p>“在若森的面前，你拿着刀，刺向了夏月的心脏，紧接着，你把刀拔出，准备自刎之时，若森制止了你。他用重物将你打晕，对他来说，他别无选择。你被打晕在地<br>上，失去了意识，刀掉落在一旁。”</p><p>“以上都是你在苏醒后会有记忆的事，而接下来，便是发生在你昏迷中的故事，关于一个男人为你献上最后的爱意的故事。”</p><p>“若森把你扔下来楼，然后锁上了门。他的目的在于，让一楼的人发现你，并且明白楼上还有人活着。那时我们也确实发现了美玖小姐你从楼梯上滚落。”</p><p>“然后，若森捡起了地上的刀，准备自杀，将凶案伪装成自己杀了夏月后畏罪自杀，从而顶替了你的罪名。但是，他突然想起，自己玉龙帮的兄弟们。口口声声说不背<br>叛的是自己，而今自杀的话，对玉龙帮来说，又何尝不是一种背叛呢？为了能让大家知道他还活着，作为玉龙帮的首领而活着，或者就算死也不能是自杀而死，他不能<br>把案件伪装成畏罪自杀。”</p><p>“所以，若森打开了窗户，面向后院的窗户。接着，手紧握着刀，对着房间的镜子，在脸上划出一道一道刀口，纵使疼痛使他全身瘫软，他依然使出全力割着自己的<br>脸。随后，往自己腹部捅了一刀，然后把刀插回夏森的尸体上，便用尽最后的气力，将脸埋入火坑。成功伪造出自己是无面尸的场景。”</p><p>“他明白，人们的第一想法一定认为尸体是他本人的，于是为了诱使我们做出无面尸诡计的判断，他打开了窗，造成人从窗外逃跑的假象。我们第一反应一定是有人杀<br>了他们（若森和夏月）后逃跑了，但也有可能人们意识到这是个无面尸诡计，杀人逃走的其实是若森。这样，第一种情况，人们会认为那个莫须有的逃跑之人就是凶<br>手，从而让美玖小姐你摆脱罪名，并把若森他自己伪装成被杀；另一种情况，人们识破这是无面尸诡计，最后是若森杀了人（夏月和跟班）逃跑了，再次摆脱了你的罪<br>名，并且让世人知道自己还活着，即便不能再回到罡风帮，也能辩解为背负杀戮之罪而不是为了女人而背叛。”</p><p>“无论是若森设想的哪种解答，都将收束于美玖小姐你的无罪。但他不知地上是大雨冲刷后的泥地，而泥地上没有脚印。哪种解答都不能完美解决案件。”</p><p>“其实让我产生怀疑的，还是若森无面尸的情况。我把自己放在若森设计的解答中想了想，既然凶手最后打算把犯人的脸埋进火里做成无面尸的话，他为什么还要用刀<br>割呢？他大可等着无面尸的脸烧到无法辨认再离开，而且我们是被火烧的烟味吸引来的，他也可以控制现场的火势，延长尸体发现时间。唯一的解释就是，制作无面尸<br>的人不知道何时自己的脸才能被火烧的看不清，也就是说他马上要死了。在死之前能确认自己是无面尸的做法，就是用刀亲自将自己的脸割花，正好房间里有镜子。而<br>火烧不过是保障罢了。”</p><p>“另外我感到疑惑的一点的就是，为什么夏月的致命伤是左胸刺穿心脏的刀伤，而腹部最后又插着刀呢？也就是说，为什么若森最后要把刀给插回去呢？我想，若森大<br>概也是不希望夏月背上背叛的罪名吧，他不希望夏月像萧绫女刚刚所推理的那样，也被世人当做杀人后畏罪自杀的背叛者。”</p><p>“我想，如果昨天没有下雨，后院的小路上不是满布泥泞的话，事情真的会像他想象中那样，没有背叛兄弟，也没有辜负所爱之人。”</p><p>房间的窗户没关，风不请自来地把窗帘吹得膨胀，几缕迷路的阳光撒了进来。</p><p>“好了，美玖小姐，我的故事告一段落。虽然昏迷的你听不到，但我还是希望你能知道有一个人为你做的一切。当然，若森，夏月，美玖小姐，你们三人谁都没错，错<br>的是时间罢，有人先来，自然有人落后。那么，我们就先告辞了。”</p><p>我拉着萧绫女的手，走出了房门。</p><p>在关上房门的最后一刻，透过门缝，看到美玖小姐静谧的脸上，多了几道无声的泪痕。</p>]]></content>
      
      
      <categories>
          
          <category> 推理のSonata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推理 </tag>
            
            <tag> 拙作 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
